{"version":3,"sources":["comonents/Footer/Footer.tsx","helpers/functions/sortHelperFunctions.ts","helpers/fetch/httpClient.ts","comonents/api/products.ts","comonents/api/phones.ts","comonents/api/tablets.ts","comonents/api/accessories.ts","helpers/localStorage/useLocalStorage.ts","helpers/fetch/fetchClient.ts","comonents/api/productDetails.ts","comonents/ProductContext/ProductContext.tsx","helpers/utils/getSearchWith.tsx","comonents/Header/Header.tsx","App.tsx","comonents/Banner/Banner.tsx","comonents/Button/Button.tsx","comonents/ProductCard/ProductCard.tsx","comonents/Carousel/Carousel.tsx","comonents/ProductSlider/ProductSlider.tsx","comonents/BrandNew/BrandNew.tsx","comonents/Category/Category.tsx","comonents/HotPrices/HotPrices.tsx","comonents/Loader/Loader.tsx","pages/HomePage/HomePage.tsx","comonents/Dropdown/Dropdown.tsx","comonents/Pagination/Pagination.tsx","comonents/ProductList/ProductList.tsx","comonents/NoResults/NoResults.tsx","helpers/utils/sortProducts.ts","comonents/NoSearchResults/NoSearchResults.tsx","comonents/BreadCrumbs/BreadCrumbs.tsx","pages/PhonesPage/PhonesPage.tsx","pages/TabletsPage/TabletsPage.tsx","pages/AccessoriesPage/AccessoriesPage.tsx","pages/NotFoundPage/NotFoundPage.tsx","pages/FavouritesPage/FavouritesPage.tsx","comonents/Cart/Cart.tsx","comonents/BackButton/BackButton.tsx","pages/CartPage/CartPage.tsx","helpers/utils/getFilteredCart.ts","helpers/utils/getTotalPrice.ts","comonents/About/About.tsx","comonents/Options/Option.tsx","pages/ProductDetailsPage/ProductDetailsPage.tsx","Root.tsx","index.tsx"],"names":["Footer","handleButtonClick","window","scrollTo","top","className","to","onClick","href","target","rel","type","title","filterProductsByType","products","filter","product","request","url","delay","Promise","resolve","setTimeout","then","fetch","response","json","client","getProducts","getHotPriceProducts","filteredProducts","discount","sortFunction","sortedProducts","sort","productA","productB","absoluteDiscountA","price","absoluteDiscountB","Number","getPhones","a","data","getTablets","getAccessories","useLocalStorage","key","startValue","useState","localStorage","getItem","JSON","parse","e","value","setValue","newValue","setItem","stringify","fetchProducts","getData","setData","setIsError","setIsLoading","name","console","error","fetchDetails","selectedProductId","setProductDetails","setSelectedProduct","setIsProductNotFound","foundProduct","find","p","id","ProductsContext","React","createContext","hotPriceProducts","newBrandProducts","links","sortDropdown","options","isOpen","perPageDropdown","page","query","perPage","setPerPage","setPageCount","setStartIndex","phones","isLoading","tablets","accessories","setCurrentOption","productDetails","android","os","battery","camera","primary","description","display","screenResolution","images","setSelectedProductId","selectedProduct","age","screen","capacity","ram","getArrayLength","carts","setCarts","randomProducts","favourites","setFavourites","isProductAdded","getArrayUpdates","isProductNotFound","isError","ProductsProvider","children","setProducts","useSearchParams","searchParams","location","useLocation","setHotPriceProducts","setNewBrandProducts","setTablets","setPhones","setAccessories","useEffect","ProductClient","pathname","setRandomProducts","count","productsRandom","availableProducts","length","push","shuffledProducts","Math","random","slice","get","productsToCheck","some","productValue","Newest","Alphabetically","Cheapest","All","perPageToNum","Array","from","ceil","_","index","currentValue","Object","keys","array","productsToUpdare","productToCheck","Provider","useProducts","useContext","getSearchWith","currrentParams","paramsToUpdate","newParams","URLSearchParams","toString","entries","forEach","delete","set","Header","isHomePage","isCartPage","isProductDetailsPage","getPlaceholderText","split","getLinkClass","isActive","classNames","setSearchParams","inputValue","setInputValue","setDebounceSearchWidth","useCallback","debounce","search","placeholder","onChange","updatedInput","App","Banner","activeSlide","setActiveSlide","totalSlides","action","prevSlide","autoChangeSlide","intervalId","setInterval","clearInterval","map","link","src","alt","Button","isProductInCart","isProductInFavourites","preventDefault","updatesProducts","ProductCard","priceWithDiscount","useMemo","state","Carousel","currentSlide","firstItem","document","querySelector","itemWidth","clientWidth","querySelectorAll","style","transform","buttons","ProductSlider","setCurrentSlide","isPrevDisabled","isNextDisabled","newSlide","BrandNew","currentBrandNewSlide","setCurrentBrandNewSlide","Category","renderContext","productType","HotPrices","currentHotPriceSlide","setCurrentHotPriceSlide","Loader","HomePage","Dropdown","dropdown","queryKey","isOpenState","setIsOpenState","dropdownRef","useRef","selectedOption","handleClickOutside","event","current","contains","addEventListener","removeEventListener","handleClick","ref","option","Pagination","currentPage","pageCount","totalLength","isPrev","isNext","ProductList","productsForCurrentPage","NoResults","category","SortProducts","localeCompare","toLowerCase","includes","NoSearchResults","BreadCrumbs","linkName","PhonesPage","sortedPhones","startIndex","TabletsPage","sortedTablets","AccessoriesPage","sortedAccessories","NotFoundPage","FavouritesPage","sortedFavourites","Cart","cart","handleCartAction","totalPrice","BackButton","navigate","useNavigate","CartPage","filteredCarts","getFilteredCarts","reduce","acc","getTotalPrice","isMessage","setIsMessage","cartToAdd","itemIndex","updatedCarts","findIndex","cartItem","splice","About","Option","ProductDetailsPage","imgIndex","setImgIndex","productId","useParams","getBackButtonName","img","handleImageClick","Root","path","element","replace","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.29566ba8.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\n\nimport './Footer.scss';\n\nexport const Footer = () => {\n  const handleButtonClick = () => {\n    window.scrollTo({\n      top: 0,\n    });\n  };\n\n  return (\n    <footer className=\"footer\">\n      <Link\n        to=\"/\"\n        className=\"icon icon--logo\"\n        onClick={handleButtonClick}\n      />\n\n      <div className=\"container footer__link-container\">\n        <a\n          className=\"text text--small text--gray\"\n          href=\"https://github.com/Pa1eOrc/react_phone-catalog\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Github\n        </a>\n        <a href=\"/#\" className=\"text text--small text--gray\">\n          Contacts\n        </a>\n        <a href=\"/#\" className=\"text text--small text--gray\">\n          Rights\n        </a>\n      </div>\n\n      <div className=\"footer__button-container\">\n        <p className=\"text text--small text--gray\">Back to top</p>\n        <button\n          className=\"footer__button\"\n          type=\"button\"\n          title=\"Back to top\"\n          onClick={handleButtonClick}\n        >\n          <span className=\"icon icon--arrow\" />\n        </button>\n      </div>\n    </footer>\n  );\n};\n","import { Product } from '../../type/Product';\n\nexport function filterProductsByDiscount(products: Product[]): Product[] {\n  return products.filter(product => product.discount > 0);\n}\n\nexport function sortProductsByAbsoluteDiscount(products: Product[]): Product[] {\n  return products.sort((productA: Product, productB: Product) => {\n    const absoluteDiscountA = (productA.price * productA.discount) / 100;\n    const absoluteDiscountB = (productB.price * productB.discount) / 100;\n\n    return Number(absoluteDiscountA) - Number(absoluteDiscountB);\n  });\n}\n\nexport function filterProductsWithoutDiscount(products: Product[]): Product[] {\n  return products.filter(product => product.discount === 0);\n}\n\nexport function sortProductsByPrice(products: Product[]): Product[] {\n  return products.sort((productA: Product, productB: Product) => {\n    return productB.price - productA.price;\n  });\n}\n\nexport function filterProductsByType(\n  products: Product[], type: string,\n): Product[] {\n  return products.filter(product => product.type === type);\n}\n\nexport function filterProductsById(\n  products: Product[], id: string,\n) {\n  return products.filter(\n    product => product.id !== id,\n  );\n}\n","// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_phone-catalog/api';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction request<T>(url: string): Promise<T> {\n  return wait(300)\n    .then(() => fetch(BASE_URL + url))\n    .then(response => response.json());\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n};\n","import { Product } from '../../type/Product';\nimport * as sortFunction from '../../helpers/functions/sortHelperFunctions';\nimport { client } from '../../helpers/fetch/httpClient';\n\nexport function getProducts() {\n  return client.get<Product[]>('/products.json');\n}\n\nexport const getHotPriceProducts = (products: Product[]) => {\n  const filteredProducts = sortFunction.filterProductsByDiscount(products);\n  const sortedProducts = sortFunction\n    .sortProductsByAbsoluteDiscount(filteredProducts);\n\n  return sortedProducts;\n};\n\nexport const getBrandNewProducts = (products: Product[]) => {\n  const filteredProducts = sortFunction\n    .filterProductsWithoutDiscount(products);\n  const sortedProducts = sortFunction\n    .sortProductsByPrice(filteredProducts);\n\n  return sortedProducts;\n};\n\nexport const getSuggestedProducts = (\n  products: Product[], id: string, count: number,\n) => {\n  const productsRandom = [];\n  const availableProducts = sortFunction.filterProductsById(products, id);\n\n  if (availableProducts.length < count) {\n    productsRandom.push(...availableProducts);\n  } else {\n    const shuffledProducts = availableProducts.sort(\n      () => Math.random() - 0.5,\n    );\n\n    productsRandom.push(...shuffledProducts.slice(0, count));\n  }\n\n  return productsRandom;\n};\n","import { Product } from '../../type/Product';\nimport { client } from '../../helpers/fetch/httpClient';\nimport {\n  filterProductsByType,\n} from '../../helpers/functions/sortHelperFunctions';\n\nconst url = '/products.json';\n\nexport async function getPhones() {\n  const data = await client.get<Product[]>(url);\n\n  return filterProductsByType(data, 'phone');\n}\n","import { Product } from '../../type/Product';\nimport { client } from '../../helpers/fetch/httpClient';\nimport {\n  filterProductsByType,\n} from '../../helpers/functions/sortHelperFunctions';\n\nconst url = '/products.json';\n\nexport async function getTablets() {\n  const data = await client.get<Product[]>(url);\n\n  return filterProductsByType(data, 'tablet');\n}\n","import { Product } from '../../type/Product';\nimport { client } from '../../helpers/fetch/httpClient';\nimport {\n  filterProductsByType,\n} from '../../helpers/functions/sortHelperFunctions';\n\nconst url = '/products.json';\n\nexport async function getAccessories() {\n  const data = await client.get<Product[]>(url);\n\n  return filterProductsByType(data, 'accessory');\n}\n","import { useState } from 'react';\n\nexport function useLocalStorage<T>(\n  key: string, startValue: T,\n): [T, (v: T) => void] {\n  const [value, setValue] = useState(() => {\n    const data = localStorage.getItem(key);\n\n    if (data === null) {\n      return startValue;\n    }\n\n    try {\n      return JSON.parse(data);\n    } catch (e) {\n      return startValue;\n    }\n  });\n\n  const saveValue = (newValue: T) => {\n    localStorage.setItem(key, JSON.stringify(newValue));\n    setValue(newValue);\n  };\n\n  return [value, saveValue];\n}\n","/* eslint-disable no-console */\nimport { getProductDetails } from '../../comonents/api/productDetails';\nimport { Product } from '../../type/Product';\nimport { ProductDeatails } from '../../type/ProductDetails';\n\nexport const fetchProducts = async (\n  getData: () => Promise<Product[]>,\n  setData: (data: Product[]) => void,\n  setIsError: (isError: string) => void,\n  setIsLoading: (isLoading: boolean) => void,\n  name: string,\n) => {\n  setIsLoading(true);\n  setIsError('');\n  try {\n    const data = await getData();\n\n    setData(data);\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    setIsError(`Error fetching ${name}`);\n  } finally {\n    setIsLoading(false);\n  }\n};\n\nexport const fetchDetails = async (\n  selectedProductId: string,\n  setProductDetails: (details: ProductDeatails) => void,\n  setSelectedProduct: (product: Product) => void,\n  setIsProductNotFound: (isProductNotFound: boolean) => void,\n  setIsError: (isError: string) => void,\n  setIsLoading: (isLoading: boolean) => void,\n  products: Product[],\n  name: string,\n) => {\n  if (selectedProductId) {\n    setIsLoading(true);\n    setIsError('');\n\n    try {\n      const data = await getProductDetails(selectedProductId);\n\n      setProductDetails(data);\n      const foundProduct = products.find((p) => p.id === selectedProductId);\n\n      if (foundProduct) {\n        setIsProductNotFound(false);\n        setSelectedProduct(foundProduct);\n      } else {\n        setIsProductNotFound(true);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setIsError(`Error fetching ${name}`);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n};\n","import { ProductDeatails } from '../../type/ProductDetails';\nimport { client } from '../../helpers/fetch/httpClient';\n\nexport function getProductDetails(id: string) {\n  return client.get<ProductDeatails>(`/products/${id}.json`);\n}\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { Product } from '../../type/Product';\nimport * as ProductClient from '../api/products';\nimport { DropdownIterface, Option } from '../../type/Dropdown';\nimport { getPhones } from '../api/phones';\nimport { getTablets } from '../api/tablets';\nimport { getAccessories } from '../api/accessories';\nimport { ProductDeatails } from '../../type/ProductDetails';\nimport { useLocalStorage } from '../../helpers/localStorage/useLocalStorage';\nimport { fetchProducts, fetchDetails } from '../../helpers/fetch/fetchClient';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype ProductsContextProps = {\n  products: Product[],\n  hotPriceProducts: Product[],\n  newBrandProducts: Product[],\n  links: string[],\n  sortDropdown: DropdownIterface,\n  perPageDropdown: DropdownIterface,\n  page: number,\n  sort: string,\n  query: string,\n  perPage: string,\n  setPerPage: (length: number) => number;\n  setPageCount: (length: number, perPageToNum: number) => number[],\n  setStartIndex: (perPageToNum: number) => number,\n  phones: Product[],\n  isLoading: boolean,\n  tablets: Product[]\n  accessories: Product[],\n  setCurrentOption: (options: Option, currentValue: string) => string,\n  productDetails: ProductDeatails,\n  selectedProductId: string,\n  setSelectedProductId: (selectedProductId: string) => void,\n  selectedProduct: Product,\n  getArrayLength: (array: Product[]) => number,\n  carts: Product[],\n  setCarts: (v: Product[]) => void,\n  randomProducts: Product[],\n  favourites: Product[],\n  setFavourites: (v: Product[]) => void,\n  isProductAdded: (productsToCheck: Product[], id: string) => boolean,\n  getArrayUpdates: (\n    productsToUpdare: Product[], productToCheck: Product) => Product[],\n  isProductNotFound: boolean;\n  isError: string,\n};\n\nexport const ProductsContext = React.createContext<ProductsContextProps>({\n  products: [],\n  hotPriceProducts: [],\n  newBrandProducts: [],\n  links: [],\n  sortDropdown: {\n    name: '',\n    options: {},\n    isOpen: false,\n  },\n  perPageDropdown: {\n    name: '',\n    options: {},\n    isOpen: false,\n  },\n  page: 0,\n  sort: '',\n  query: '',\n  perPage: '',\n  setPerPage: () => 0,\n  setPageCount: () => [],\n  setStartIndex: () => 0,\n  phones: [],\n  isLoading: true,\n  tablets: [],\n  accessories: [],\n  setCurrentOption: () => '',\n  productDetails: {\n    android: {\n      os: '',\n    },\n    battery: {\n      type: '',\n    },\n    camera: {\n      primary: '',\n    },\n    description: '',\n    display: {\n      screenResolution: '',\n    },\n    id: '',\n    images: [],\n    name: '',\n  },\n  selectedProductId: '',\n  setSelectedProductId: () => '',\n  selectedProduct: {\n    type: '',\n    price: 0,\n    discount: 0,\n    age: 0,\n    id: '',\n    screen: '',\n    capacity: '',\n    ram: '',\n    name: '',\n  },\n  getArrayLength: () => 0,\n  carts: [],\n  setCarts: () => [],\n  randomProducts: [],\n  favourites: [],\n  setFavourites: () => [],\n  isProductAdded: () => false,\n  getArrayUpdates: () => [],\n  isProductNotFound: false,\n  isError: '',\n});\n\nexport const ProductsProvider: React.FC<Props> = ({ children }) => {\n  const [products, setProducts] = useState<Product[]>([]);\n  const [searchParams] = useSearchParams();\n  const location = useLocation();\n  const [hotPriceProducts, setHotPriceProducts] = useState<Product[]>([]);\n  const [newBrandProducts, setNewBrandProducts] = useState<Product[]>([]);\n  const [tablets, setTablets] = useState<Product[]>([]);\n  const [phones, setPhones] = useState<Product[]>([]);\n  const [accessories, setAccessories] = useState<Product[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const links = ['phones', 'tablets', 'accessories'];\n  const [isError, setIsError] = useState('');\n\n  useEffect(() => {\n    fetchProducts(\n      ProductClient.getProducts,\n      setProducts,\n      setIsError,\n      setIsLoading,\n      'products',\n    );\n  }, []);\n\n  useEffect(() => {\n    setHotPriceProducts(ProductClient.getHotPriceProducts(products));\n    setNewBrandProducts(ProductClient.getBrandNewProducts(products));\n  }, [products]);\n\n  useEffect(() => {\n    if (location.pathname === '/phones') {\n      fetchProducts(getPhones, setPhones, setIsError, setIsLoading, 'phones');\n    }\n\n    if (location.pathname === '/tablets') {\n      fetchProducts(\n        getTablets, setTablets, setIsError, setIsLoading, 'tablets',\n      );\n    }\n\n    if (location.pathname === '/accessories') {\n      fetchProducts(\n        getAccessories, setAccessories, setIsError, setIsLoading, 'accessories',\n      );\n    }\n  }, [location.pathname]);\n\n  // #region Details\n  const count = 8;\n  const [selectedProductId, setSelectedProductId] = useState('');\n  const [productDetails, setProductDetails] = useState<ProductDeatails>({\n    android: {\n      os: '',\n    },\n    battery: {\n      type: '',\n    },\n    camera: {\n      primary: '',\n    },\n    description: '',\n    display: {\n      screenResolution: '',\n    },\n    id: '',\n    images: [],\n    name: '',\n  });\n  const [selectedProduct, setSelectedProduct] = useState<Product>({\n    type: '',\n    price: 0,\n    discount: 0,\n    age: 0,\n    id: '',\n    screen: '',\n    capacity: '',\n    ram: '',\n    name: '',\n  });\n  const [randomProducts, setRandomProducts] = useState<Product[]>([]);\n  const [isProductNotFound, setIsProductNotFound] = useState(false);\n\n  useEffect(() => {\n    fetchDetails(\n      selectedProductId,\n      setProductDetails,\n      setSelectedProduct,\n      setIsProductNotFound,\n      setIsError,\n      setIsLoading,\n      products,\n      'product details',\n    );\n  }, [selectedProductId, products]);\n\n  useEffect(() => {\n    setRandomProducts(\n      ProductClient.getSuggestedProducts(products, selectedProductId, count),\n    );\n  }, [selectedProductId, products, count]);\n\n  // #endregion Details\n\n  //  #region Pagination, Dropdown, Carousel\n  const sortDropdown: DropdownIterface = {\n    name: 'sort',\n    options: {\n      Newest: 'age',\n      Alphabetically: 'name',\n      Cheapest: 'price',\n    },\n    isOpen: false,\n  };\n\n  const perPageDropdown: DropdownIterface = {\n    name: 'perPage',\n    options: {\n      4: '4',\n      8: '8',\n      16: '16',\n      All: 'all',\n    },\n    isOpen: false,\n  };\n  const page = +(searchParams.get('page') || 1);\n  const sort = searchParams.get('sort') || 'age';\n  const perPage = searchParams.get('perPage') || '16';\n  const query = searchParams.get('query') || '';\n  const itemsPerPage = 4;\n\n  function getArrayLength(array: Product[]) {\n    return array.length - itemsPerPage;\n  }\n\n  function setPerPage(length: number) {\n    return perPage === 'all' ? length : +perPage;\n  }\n\n  function setPageCount(length: number, perPageToNum: number) {\n    return Array.from(\n      { length: Math.ceil(length / perPageToNum) },\n      (_, index) => index + 1,\n    );\n  }\n\n  function setStartIndex(perPageToNum: number) {\n    return (page - 1) * perPageToNum;\n  }\n\n  function setCurrentOption(options: Option, currentValue: string): string {\n    const foundKey = Object.keys(options).find(\n      key => options[key] === currentValue,\n    );\n\n    return foundKey || '';\n  }\n\n  useEffect(() => {\n    setIsLoading(true);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 200);\n  }, [page, perPage, sort]);\n  //  #endregion Pagination & Dropdown\n\n  // #region Cart & Favourites\n  const [carts, setCarts] = useLocalStorage<Product[]>('cart', []);\n  const [favourites, setFavourites] = useLocalStorage<Product[]>(\n    'favourites', [],\n  );\n\n  function isProductAdded(productsToCheck: Product[], id: string) {\n    return productsToCheck.some(product => product.id === id);\n  }\n\n  function getArrayUpdates(\n    productsToUpdare: Product[], productToCheck: Product,\n  ) {\n    const productIsAdded = isProductAdded(productsToUpdare, productToCheck.id);\n    let updatedProducts = [];\n\n    if (productIsAdded) {\n      updatedProducts = productsToUpdare.filter(\n        product => product.id !== productToCheck.id,\n      );\n    } else {\n      updatedProducts = [...productsToUpdare, productToCheck];\n    }\n\n    return updatedProducts;\n  }\n  // #endregion Cart\n\n  const productValue: ProductsContextProps = {\n    products,\n    hotPriceProducts,\n    newBrandProducts,\n    links,\n    sortDropdown,\n    perPageDropdown,\n    page,\n    sort,\n    query,\n    perPage,\n    setPerPage,\n    setPageCount,\n    setStartIndex,\n    isLoading,\n    phones,\n    tablets,\n    accessories,\n    setCurrentOption,\n    productDetails,\n    selectedProductId,\n    setSelectedProductId,\n    selectedProduct,\n    getArrayLength,\n    carts,\n    setCarts,\n    randomProducts,\n    favourites,\n    setFavourites,\n    isProductAdded,\n    getArrayUpdates,\n    isProductNotFound,\n    isError,\n  };\n\n  return (\n    <ProductsContext.Provider value={productValue}>\n      {children}\n    </ProductsContext.Provider>\n  );\n};\n\nexport const useProducts = (\n): ProductsContextProps => React.useContext(ProductsContext);\n","import { SearchParams } from '../../type/SearchParams';\n\nexport function getSearchWith(\n  currrentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currrentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  if (paramsToUpdate.sort || paramsToUpdate.perPage) {\n    newParams.delete('page');\n  }\n\n  return newParams.toString();\n}\n","import classNames from 'classnames';\n\nimport { NavLink, useLocation, useSearchParams } from 'react-router-dom';\nimport { useCallback, useEffect, useState } from 'react';\nimport debounce from 'lodash.debounce';\nimport { useProducts } from '../ProductContext';\nimport { getSearchWith } from '../../helpers/utils/getSearchWith';\nimport { SearchParams } from '../../type/SearchParams';\n\nimport './Header.scss';\n\nexport const Header = () => {\n  const {\n    carts,\n    favourites,\n    selectedProductId,\n    query,\n  } = useProducts();\n  const location = useLocation();\n  const isHomePage = location.pathname === '/';\n  const isCartPage = location.pathname === '/cart';\n  const isProductDetailsPage = location.pathname === `/phones/:${selectedProductId}`;\n  const getPlaceholderText = location.pathname.split('/')[1];\n\n  const getLinkClass = (\n    { isActive }: { isActive: boolean },\n  ) => classNames(\n    'navbar__link',\n    { 'navbar__link--active': isActive },\n  );\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState(query);\n\n  const setDebounceSearchWidth = useCallback(\n    debounce((paramsToUpdate: SearchParams) => {\n      const search = getSearchWith(searchParams, paramsToUpdate);\n\n      setSearchParams(search);\n    }, 1000), [searchParams, location.pathname],\n  );\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const updatedInput = { query: e.target.value || null };\n\n    setInputValue(e.target.value);\n    setDebounceSearchWidth(updatedInput);\n  };\n\n  const clearInput = () => {\n    setSearchParams(getSearchWith(searchParams, { query: null }));\n    setInputValue(query);\n  };\n\n  useEffect(() => {\n    setInputValue(query);\n  }, [query]);\n\n  return (\n    <header className=\"header\">\n      <div className=\"header__container\">\n        <div className=\"header__logo-container\">\n          <NavLink to=\"/\">\n            <span className=\"icon icon--logo\" />\n          </NavLink>\n        </div>\n\n        {!isCartPage && (\n          <nav className=\"navbar\">\n            <div className=\"navbar__container\">\n              <NavLink to=\"/\" className={getLinkClass}>\n                Home\n              </NavLink>\n            </div>\n\n            <div className=\"navbar__container\">\n              <NavLink to=\"/phones\" className={getLinkClass}>\n                Phones\n              </NavLink>\n            </div>\n\n            <div className=\"navbar__container\">\n              <NavLink to=\"/tablets\" className={getLinkClass}>\n                Tablets\n              </NavLink>\n            </div>\n\n            <div className=\"navbar__container\">\n              <NavLink to=\"/accessories\" className={getLinkClass}>\n                Accessories\n              </NavLink>\n            </div>\n          </nav>\n        )}\n      </div>\n\n      <div className=\"header__container\">\n        {!isCartPage && !isHomePage && !isProductDetailsPage && (\n          <label className=\"header__search-container\">\n            <input\n              type=\"search\"\n              placeholder={`Search in ${getPlaceholderText}...`}\n              className=\"header__search\"\n              value={inputValue}\n              onChange={handleInputChange}\n            />\n\n            {!inputValue ? (\n              <span className=\"icon icon--search\" />\n            ) : (\n              <button\n                onClick={clearInput}\n                type=\"submit\"\n                title=\"clear imput\"\n                className=\"header__clear-button\"\n                data-cy=\"searchDelete\"\n              >\n                <span className=\"icon icon--cross\" />\n              </button>\n            )}\n          </label>\n        )}\n\n        {!isCartPage && (\n          <div className=\"navbar__container navbar__container--icons\">\n            <NavLink\n              to=\"/favourites\"\n              className={getLinkClass}\n            >\n              <div className=\"navbar__icon-container\">\n                <span className=\"icon icon--favourites\" />\n                {favourites.length > 0 && (\n                  <span className=\"navbar__quantity\">\n                    {favourites.length}\n                  </span>\n                )}\n              </div>\n            </NavLink>\n          </div>\n        )}\n\n        <div className=\"navbar__container navbar__container--icons\">\n          <NavLink\n            to=\"/cart\"\n            className={getLinkClass}\n          >\n            <div className=\"navbar__icon-container\">\n              <span className=\"icon icon--cart\" />\n              {carts.length > 0 && (\n                <span className=\"navbar__quantity\">\n                  {carts.length}\n                </span>\n              )}\n            </div>\n          </NavLink>\n        </div>\n      </div>\n    </header>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Footer } from './comonents/Footer';\nimport { Header } from './comonents/Header';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <main className=\"main\">\n        <Outlet />\n      </main>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import classNames from 'classnames';\n\nimport { Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { useProducts } from '../ProductContext';\n\nimport './Banner.scss';\n\nexport const Banner = () => {\n  const { links } = useProducts();\n  const [activeSlide, setActiveSlide] = useState(0);\n  const totalSlides = links.length;\n\n  const handleButtonClick = (action: 'next' | 'prev') => {\n    if (action === 'next') {\n      setActiveSlide(\n        (prevSlide) => (prevSlide < totalSlides - 1 ? prevSlide + 1 : 0),\n      );\n    } else if (action === 'prev') {\n      setActiveSlide(\n        (prevSlide) => (prevSlide === 0 ? totalSlides - 1 : prevSlide - 1),\n      );\n    }\n  };\n\n  const autoChangeSlide = () => {\n    handleButtonClick('next');\n  };\n\n  useEffect(() => {\n    const intervalId = setInterval(autoChangeSlide, 5000);\n\n    return () => clearInterval(intervalId);\n  }, [activeSlide]);\n\n  return (\n    <section className=\"banner\">\n      <div className=\"banner__carousel-container\">\n        <button\n          type=\"button\"\n          className=\"banner__arrow\"\n          title=\"arrow\"\n          onClick={() => handleButtonClick('prev')}\n        >\n          <span className=\"icon icon--arrow icon--prev\" />\n        </button>\n\n        <div className=\"banner__carousel\">\n          {links.map((link, index) => (\n            <Link\n              key={link}\n              to={`/${link}`}\n              className={`banner__link\n              ${index === activeSlide ? 'banner__link--active' : ''}\n              ${index === activeSlide + 1 ? 'banner__link--next' : ''}\n              ${index === activeSlide - 1 ? 'banner__link--prev' : ''}\n              ${activeSlide === 0 && index === totalSlides - 1 ? 'banner__link--prev' : ''}\n              ${activeSlide === totalSlides - 1 && index === 0 ? 'banner__link--next' : ''}\n              `}\n            >\n              <img\n                className=\"banner__img\"\n                src={`_new/img/banner-${link}.png`}\n                alt={`${link} banner`}\n              />\n            </Link>\n          ))}\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"banner__arrow\"\n          title=\"arrow\"\n          onClick={() => handleButtonClick('next')}\n        >\n          <span className=\"icon icon--arrow icon--next\" />\n        </button>\n      </div>\n\n      <div className=\"banner__dot-container container\">\n        <span\n          className={classNames(\n            'banner__dot',\n            { 'banner__dot--active': activeSlide === 0 },\n          )}\n        />\n        <span\n          className={classNames(\n            'banner__dot',\n            { 'banner__dot--active': activeSlide === 1 },\n          )}\n        />\n        <span\n          className={classNames(\n            'banner__dot',\n            { 'banner__dot--active': activeSlide === 2 },\n          )}\n        />\n      </div>\n    </section>\n  );\n};\n","import classNames from 'classnames';\nimport './Button.scss';\nimport { useProducts } from '../ProductContext';\nimport { Product } from '../../type/Product';\n\ntype Props = {\n  name: string,\n  product: Product,\n};\n\nexport const Button: React.FC<Props> = ({ name, product }) => {\n  const {\n    getArrayUpdates,\n    isProductAdded,\n    carts,\n    setCarts,\n    favourites,\n    setFavourites,\n  } = useProducts();\n\n  const isProductInCart = isProductAdded(carts, product.id);\n  const isProductInFavourites = isProductAdded(favourites, product.id);\n\n  const handleButtonClick = (e: React.MouseEvent, action: string) => {\n    e.preventDefault();\n    let updatesProducts = [];\n\n    if (action === 'cart') {\n      updatesProducts = getArrayUpdates(carts, product);\n      setCarts(updatesProducts);\n    }\n\n    if (action === 'favourites') {\n      updatesProducts = getArrayUpdates(favourites, product);\n      setFavourites(updatesProducts);\n    }\n  };\n\n  return (\n    <div className=\"button\">\n      <button\n        type=\"submit\"\n        className={classNames(\n          'button__add',\n          { 'button__add--selected': isProductInCart },\n          { 'button__add--details': name === 'details' },\n        )}\n        onClick={(e) => handleButtonClick(e, 'cart')}\n      >\n        {isProductInCart ? (\n          'Added to cart'\n        ) : (\n          'Add to cart'\n        )}\n      </button>\n\n      <button\n        type=\"submit\"\n        title=\"favourites\"\n        data-cy=\"addToFavorite\"\n        className={classNames(\n          'button__fav',\n          { 'button__fav--details': name === 'details' },\n        )}\n        onClick={(e) => handleButtonClick(e, 'favourites')}\n      >\n        <span className={classNames(\n          'icon',\n          'icon--favourites',\n          { 'icon--favourites-red': isProductInFavourites },\n        )}\n        />\n      </button>\n    </div>\n  );\n};\n","import { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport React, { useMemo } from 'react';\nimport { Product } from '../../type/Product';\nimport { Button } from '../Button';\n\nimport './ProductCard.scss';\n\ntype Props = {\n  product: Product\n};\n\nexport const ProductCard: React.FC<Props> = ({ product }) => {\n  const {\n    name,\n    id,\n    price,\n    discount,\n    screen,\n    capacity,\n    ram,\n    type,\n  } = product;\n\n  const priceWithDiscount = useMemo(\n    () => price - (price * discount) / 100, [price, discount],\n  );\n  const [searchParams] = useSearchParams();\n  const location = useLocation();\n  const link = location.pathname === '/favourites'\n    ? `/favourites/${id}`\n    : `/${type}s/${id}`;\n\n  return (\n    <Link\n      to={{\n        pathname: link,\n      }}\n      state={{ search: searchParams.toString() }}\n      data-cy=\"cardsContainer\"\n      className=\"product-card\"\n    >\n      <img\n        className=\"product-card__img\"\n        src={`img/products/${id}.0.jpg`}\n        alt={id}\n      />\n      <div className=\"product-card__container\">\n        <p className=\"text product-card__title\">{name}</p>\n\n        <div\n          className=\"product-card__price-container\"\n        >\n          <h2 className=\"text text--h2\">\n            {`$${priceWithDiscount}`}\n          </h2>\n          {discount > 0 && (\n            <h2\n              className=\"text text--h2-strikethrough\"\n            >\n              {`$${price}`}\n            </h2>\n          )}\n        </div>\n\n        <div className=\"product-card__info-container\">\n          <div className=\"container\">\n            <p className=\"text text--small text--gray\">\n              Screen\n            </p>\n            <p className=\"text text--small\">{screen}</p>\n          </div>\n\n          <div className=\"container\">\n            <p className=\"text text--small text--gray\">\n              Capacity\n            </p>\n            <p className=\"text text--small\">{capacity}</p>\n          </div>\n\n          <div className=\"container\">\n            <p className=\"text text--small text--gray\">\n              RAM\n            </p>\n            <p className=\"text text--small\">{ram}</p>\n          </div>\n        </div>\n\n        <Button\n          name=\"cart\"\n          product={product}\n        />\n      </div>\n    </Link>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Product } from '../../type/Product';\nimport { ProductCard } from '../ProductCard';\n\nimport './Carousel.scss';\n\ntype Props = {\n  products: Product[],\n  currentSlide: number,\n  id: string,\n};\n\nexport const Carousel: React.FC<Props> = ({\n  products,\n  currentSlide,\n  id,\n}) => {\n  const firstItem = document.querySelector('.carousel__item');\n  const itemWidth = firstItem?.clientWidth || 0;\n\n  useEffect(() => {\n    const productsToMove = document.querySelectorAll(\n      `.carousel__item--${id}`,\n    );\n\n    productsToMove.forEach((product) => {\n      const element = product as HTMLElement;\n\n      element.style.transform = `translateX(-${currentSlide * itemWidth}px)`;\n    });\n  }, [currentSlide]);\n\n  return (\n    <ul className=\"carousel\">\n      {products.map((product) => {\n        return (\n          <li\n            key={product.id}\n            className={`\n            carousel__item\n            carousel__item--${id}`}\n          >\n            <ProductCard\n              product={product}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import classNames from 'classnames';\n\nimport { useMemo } from 'react';\n\nimport './ProductSlider.scss';\n\nconst buttons = ['prev', 'next'];\n\ntype Props = {\n  currentSlide: number,\n  setCurrentSlide: (currentSlide: number) => void,\n  length: number,\n};\n\nexport const ProductSlider: React.FC<Props> = ({\n  currentSlide,\n  setCurrentSlide,\n  length,\n}) => {\n  const handleButtonClick = (action: string) => {\n    let newSlide = currentSlide;\n\n    if (action === 'prev' && currentSlide > 0) {\n      newSlide = currentSlide - 1;\n    } else if (action === 'next' && currentSlide < length) {\n      newSlide = currentSlide + 1;\n    }\n\n    setCurrentSlide(newSlide);\n  };\n\n  const isPrevDisabled = useMemo(\n    () => currentSlide === 0, [currentSlide],\n  );\n  const isNextDisabled = useMemo(\n    () => currentSlide === length, [currentSlide, length],\n  );\n\n  return (\n    <div className=\"product-slider container\">\n      {buttons.map(action => (\n        <button\n          key={action}\n          type=\"button\"\n          title={`move ${action === 'prev' ? 'back' : 'forward'}`}\n          className={classNames('product-slider__button', {\n            'product-slider__button--disabled': action === 'prev'\n              ? isPrevDisabled\n              : isNextDisabled,\n          })}\n          onClick={() => handleButtonClick(action)}\n        >\n          <span\n            className={`\n              icon\n              icon--arrow\n              icon--${action}\n              ${action === 'prev' && isPrevDisabled\n          ? 'icon--arrow-dis'\n          : ''}\n              ${action === 'next' && isNextDisabled\n          ? 'icon--arrow-dis'\n          : ''}\n            `}\n          />\n        </button>\n      ))}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { Carousel } from '../Carousel';\nimport { useProducts } from '../ProductContext';\nimport { ProductSlider } from '../ProductSlider';\n\nexport const BrandNew = () => {\n  const { newBrandProducts, getArrayLength } = useProducts();\n  const [currentBrandNewSlide, setCurrentBrandNewSlide] = useState(0);\n  const length = getArrayLength(newBrandProducts);\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1 className=\"text text--h1\">Brand new models</h1>\n\n        <ProductSlider\n          currentSlide={currentBrandNewSlide}\n          setCurrentSlide={setCurrentBrandNewSlide}\n          length={length}\n        />\n      </div>\n\n      <Carousel\n        products={newBrandProducts}\n        currentSlide={currentBrandNewSlide}\n        id=\"brand-new\"\n      />\n    </>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport { useProducts } from '../ProductContext';\n\nimport './Category.scss';\n\nexport const Category = () => {\n  const { links, products } = useProducts();\n\n  const filterProductsByType = (productType: string) => {\n    return products.filter(product => product.type === productType);\n  };\n\n  const renderContext = (link: string) => {\n    let title = '';\n    let productType = '';\n\n    if (link === 'tablets') {\n      title = 'Tablets';\n      productType = 'tablet';\n    }\n\n    if (link === 'accessories') {\n      title = 'Accessories';\n      productType = 'accessory';\n    }\n\n    if (link === 'phones') {\n      title = 'Mobile phones';\n      productType = 'phone';\n    }\n\n    const filteredProducts = filterProductsByType(productType);\n\n    return (\n      <>\n        <h3 className=\"text text--h3\">{title}</h3>\n        <p className=\"text text--gray\">\n          {`${filteredProducts.length} models`}\n        </p>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <h1 className=\"text text--h1\">\n        Shop by category\n      </h1>\n\n      <ul className=\"category__container\">\n        {links.map(link => (\n          <li\n            key={link}\n            data-cy=\"categoryLinksContainer\"\n            className=\"category__link-container\"\n          >\n            <Link\n              to={`/${link}`}\n              className={`category__link category__link--${link}`}\n            >\n              <img\n                src={`_new/img/category-${link}.png`}\n                alt=\"category\"\n              />\n            </Link>\n\n            <div className=\"category__title-container\">\n              {renderContext(link)}\n            </div>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { Carousel } from '../Carousel';\nimport { useProducts } from '../ProductContext';\nimport { ProductSlider } from '../ProductSlider';\n\nexport const HotPrices = () => {\n  const { hotPriceProducts, getArrayLength } = useProducts();\n  const [currentHotPriceSlide, setCurrentHotPriceSlide] = useState(0);\n  const length = getArrayLength(hotPriceProducts);\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1 className=\"text text--h1\">Hot prices</h1>\n\n        <ProductSlider\n          currentSlide={currentHotPriceSlide}\n          setCurrentSlide={setCurrentHotPriceSlide}\n          length={length}\n        />\n      </div>\n\n      <Carousel\n        products={hotPriceProducts}\n        currentSlide={currentHotPriceSlide}\n        id=\"hot-price\"\n      />\n    </>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Banner } from '../../comonents/Banner';\nimport { BrandNew } from '../../comonents/BrandNew';\nimport { Category } from '../../comonents/Category';\nimport { HotPrices } from '../../comonents/HotPrices';\nimport { Loader } from '../../comonents/Loader';\nimport { useProducts } from '../../comonents/ProductContext';\n\nimport './HomePage.scss';\n\nexport const HomePage = () => {\n  const { isLoading, isError } = useProducts();\n\n  return (\n    <div className=\"home-page\">\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {isError ? (\n            <h1>{isError}</h1>\n          ) : (\n            <>\n              <section className=\"home-page__banner banner\">\n                <Banner />\n              </section>\n\n              <section className=\"home-page__hot-price\">\n                <HotPrices />\n              </section>\n\n              <section className=\"home-page__category category\">\n                <Category />\n              </section>\n\n              <section className=\"home-page__brand-new\">\n                <BrandNew />\n              </section>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n","import classNames from 'classnames';\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../../helpers/utils/getSearchWith';\nimport { DropdownIterface } from '../../type/Dropdown';\nimport { useProducts } from '../ProductContext';\n\nimport './Dropdown.scss';\n\ntype Props = {\n  dropdown: DropdownIterface,\n  currentValue: string,\n  queryKey: string,\n  name: string,\n};\n\nexport const Dropdown: React.FC<Props> = ({\n  dropdown,\n  currentValue,\n  queryKey,\n  name: title,\n}) => {\n  const {\n    name,\n    options,\n    isOpen,\n  } = dropdown;\n  const { setCurrentOption } = useProducts();\n  const [isOpenState, setIsOpenState] = useState(isOpen);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const [searchParams] = useSearchParams();\n  const selectedOption = setCurrentOption(options, currentValue);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current\n        && !dropdownRef.current.contains(event.target as Node)) {\n        setIsOpenState(false);\n      }\n    };\n\n    if (isOpenState) {\n      document.addEventListener('click', handleClickOutside);\n    } else {\n      document.removeEventListener('click', handleClickOutside);\n    }\n  }, [isOpenState]);\n\n  const handleDropdownToggle = () => {\n    setIsOpenState(!isOpenState);\n  };\n\n  const handleClick = () => {\n    setIsOpenState(false);\n  };\n\n  return (\n    <div\n      ref={dropdownRef}\n      className={classNames(\n        'dropdown',\n        { 'dropdown--active': isOpenState },\n      )}\n    >\n      <p className=\"text text--small text--gray\">\n        {title}\n      </p>\n\n      <button\n        type=\"button\"\n        className={`\n          dropdown__trigger\n          dropdown__trigger--${name}`}\n        onClick={handleDropdownToggle}\n      >\n        {selectedOption}\n\n        <span className={classNames(\n          'icon',\n          'icon--arrow-dis',\n          { 'icon--down': !isOpenState },\n        )}\n        />\n      </button>\n\n      <div className=\"dropdown__content\">\n        <ul className=\"dropdown__list\">\n          {Object.entries(options).map(option => {\n            const [key, value] = option;\n\n            return (\n              <li key={value} className=\"dropdown__item\">\n                <Link\n                  to={{\n                    search: getSearchWith(searchParams, { [queryKey]: value }),\n                  }}\n                  className={classNames(\n                    'dropdown__link',\n                    { 'dropdown__link--selected': value === currentValue },\n                  )}\n                  onClick={handleClick}\n                >\n                  {key}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\n\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { useMemo } from 'react';\nimport { getSearchWith } from '../../helpers/utils/getSearchWith';\n\nimport './Pagination.scss';\n\ntype Props = {\n  currentPage: number,\n  pageCount: number[],\n  totalLength: number,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  currentPage,\n  pageCount,\n  totalLength,\n}) => {\n  const [searchParams] = useSearchParams();\n\n  const [\n    isPrevDisabled,\n    isNextDisabled,\n    isPrev,\n    isNext,\n  ] = useMemo(() => {\n    const isPrevDisabledValue = currentPage === 1;\n    const isNextDisabledValue = currentPage === pageCount.length;\n    const isNextValue = currentPage < totalLength\n      ? currentPage + 1 : currentPage;\n    const isPrevValue = currentPage > 1 ? currentPage - 1 : currentPage;\n\n    return [isPrevDisabledValue, isNextDisabledValue, isPrevValue, isNextValue];\n  }, [currentPage, pageCount.length, totalLength]);\n\n  return (\n    <ul className=\"pagination\" data-cy=\"pagination\">\n      <li className={classNames(\n        'pagination__item',\n        { 'pagination__item--disabled': isPrevDisabled },\n      )}\n      >\n        <Link\n          to={{\n            search: getSearchWith(\n              searchParams, { page: isPrev.toString() },\n            ),\n          }}\n          className=\"pagination__link\"\n          data-cy=\"paginationLeft\"\n        >\n          <span className={classNames(\n            'icon',\n            'icon--prev',\n            {\n              'icon--arrow': !isPrevDisabled,\n              'icon--arrow-dis': isPrevDisabled,\n            },\n          )}\n          />\n        </Link>\n      </li>\n\n      {pageCount.map(page => (\n        <li\n          key={page}\n          className=\"pagination__item\"\n        >\n          <Link\n            to={{\n              search: getSearchWith(\n                searchParams, { page: page.toString() },\n              ),\n            }}\n            className={classNames(\n              'pagination__link',\n              { 'pagination__link--active': page === currentPage },\n            )}\n          >\n            {page}\n          </Link>\n        </li>\n      ))}\n\n      <li className={classNames(\n        'pagination__item',\n        { 'pagination__item--disabled': isNextDisabled },\n      )}\n      >\n        <Link\n          to={{\n            search: getSearchWith(searchParams, { page: isNext.toString() }),\n          }}\n          className=\"pagination__link\"\n          data-cy=\"paginationRight\"\n        >\n          <span className={classNames(\n            'icon',\n            'icon--next',\n            {\n              'icon--arrow': !isNextDisabled,\n              'icon--arrow-dis': isNextDisabled,\n            },\n          )}\n          />\n        </Link>\n      </li>\n    </ul>\n  );\n};\n","import { Product } from '../../type/Product';\nimport { ProductCard } from '../ProductCard';\n\nimport './ProductList.scss';\n\ntype Props = {\n  productsForCurrentPage: Product[],\n};\n\nexport const ProductList: React.FC<Props> = ({ productsForCurrentPage }) => {\n  return (\n    <ul className=\"product-list\" data-cy=\"productList\">\n      {productsForCurrentPage.map(product => (\n        <li key={product.id}>\n          <ProductCard product={product} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","type Props = {\n  category: string,\n};\n\nexport const NoResults: React.FC<Props> = ({ category }) => (\n  <h3>{`${category} not found`}</h3>\n);\n","import { Product } from '../../type/Product';\n\nexport function SortProducts(products: Product[], sort: string, query: string) {\n  let sortedProducts = [];\n\n  switch (sort) {\n    case 'age':\n      sortedProducts = [...products].sort(\n        (productA, productB) => productA.age - productB.age,\n      );\n      break;\n\n    case 'name':\n      sortedProducts = [...products].sort(\n        (productA, productB) => productA.name.localeCompare(productB.name),\n      );\n      break;\n\n    case 'price':\n      sortedProducts = [...products].sort(\n        (productA, productB) => {\n          const absoluteDiscountA = productA.price - (\n            productA.price * productA.discount) / 100;\n          const absoluteDiscountB = productB.price - (\n            productB.price * productB.discount) / 100;\n\n          return absoluteDiscountA - absoluteDiscountB;\n        },\n      );\n      break;\n\n    default:\n      sortedProducts = products;\n  }\n\n  if (query) {\n    sortedProducts = sortedProducts.filter(\n      product => product.name.toLowerCase().includes(query.toLowerCase()),\n    );\n  }\n\n  return sortedProducts;\n}\n","export const NoSearchResults = () => {\n  return (\n    <h3>\n      NoSearchResults\n    </h3>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport './BreadCrumbs.scss';\n\ntype Props = {\n  linkName: string,\n};\n\nexport const BreadCrumbs: React.FC<Props> = ({ linkName }) => {\n  return (\n    <div className=\"bread-crumbs\">\n      <Link to=\"/\">\n        <span className=\"icon icon--home\" />\n      </Link>\n\n      <span className=\"icon icon--arrow-dis icon--next\" />\n\n      <p className=\"text text--small text--gray\">{linkName}</p>\n    </div>\n  );\n};\n","import { Loader } from '../../comonents/Loader';\nimport { Dropdown } from '../../comonents/Dropdown';\nimport { Pagination } from '../../comonents/Pagination';\nimport { ProductList } from '../../comonents/ProductList';\nimport { useProducts } from '../../comonents/ProductContext';\nimport { NoResults } from '../../comonents/NoResults';\nimport { SortProducts } from '../../helpers/utils/sortProducts';\nimport { NoSearchResults } from '../../comonents/NoSearchResults';\nimport { BreadCrumbs } from '../../comonents/BreadCrumbs';\n\nimport '../../style/block/page.scss';\n\nexport const PhonesPage = () => {\n  const {\n    sortDropdown,\n    perPageDropdown,\n    page,\n    sort,\n    query,\n    perPage,\n    setPerPage,\n    setPageCount,\n    setStartIndex,\n    isLoading,\n    phones,\n    isError,\n  } = useProducts();\n  const sortedPhones = SortProducts(phones, sort, query);\n  const totalLength = sortedPhones.length;\n  const perPageToNum = setPerPage(totalLength);\n  const pageCount = setPageCount(totalLength, perPageToNum);\n  const startIndex = setStartIndex(perPageToNum);\n  const productsForCurrentPage = sortedPhones.slice(\n    startIndex, startIndex + perPageToNum,\n  );\n\n  const renderContext = () => {\n    if (!isLoading && phones.length === 0) {\n      return <NoResults category=\"Phones\" />;\n    }\n\n    if (!isLoading && isError) {\n      return <h1>{isError}</h1>;\n    }\n\n    if (query && sortedPhones.length === 0) {\n      return <NoSearchResults />;\n    }\n\n    return (\n      <>\n        <ProductList productsForCurrentPage={productsForCurrentPage} />\n\n        {pageCount.length > 1 && (\n          <Pagination\n            currentPage={page}\n            pageCount={pageCount}\n            totalLength={totalLength}\n          />\n        )}\n      </>\n    );\n  };\n\n  return (\n    <section className=\"page\">\n      <BreadCrumbs linkName=\"Phones\" />\n\n      <h1 className=\"text text--h1 page__title\">Mobile phones</h1>\n\n      <p className=\"text text--gray\">{`${phones.length} models`}</p>\n\n      <div className=\"page__dropdown-container\">\n        <Dropdown\n          key={sortDropdown.name}\n          dropdown={sortDropdown}\n          currentValue={sort}\n          queryKey={sortDropdown.name}\n          name=\"Sort by\"\n        />\n        <Dropdown\n          key={perPageDropdown.name}\n          dropdown={perPageDropdown}\n          currentValue={perPage.toString()}\n          queryKey={perPageDropdown.name}\n          name=\"Items on page\"\n        />\n      </div>\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"page__main-container\">\n          {renderContext()}\n        </div>\n      )}\n    </section>\n  );\n};\n","import { Loader } from '../../comonents/Loader';\nimport { Dropdown } from '../../comonents/Dropdown';\nimport { Pagination } from '../../comonents/Pagination';\nimport { ProductList } from '../../comonents/ProductList';\nimport { useProducts } from '../../comonents/ProductContext';\nimport { NoResults } from '../../comonents/NoResults';\nimport { SortProducts } from '../../helpers/utils/sortProducts';\nimport { NoSearchResults } from '../../comonents/NoSearchResults';\nimport { BreadCrumbs } from '../../comonents/BreadCrumbs';\n\nimport '../../style/block/page.scss';\n\nexport const TabletsPage = () => {\n  const {\n    sortDropdown,\n    perPageDropdown,\n    page,\n    sort,\n    query,\n    perPage,\n    setPerPage,\n    setPageCount,\n    setStartIndex,\n    isLoading,\n    tablets,\n    isError,\n  } = useProducts();\n  const sortedTablets = SortProducts(tablets, sort, query);\n  const totalLength = sortedTablets.length;\n  const perPageToNum = setPerPage(totalLength);\n  const pageCount = setPageCount(totalLength, perPageToNum);\n  const startIndex = setStartIndex(perPageToNum);\n  const productsForCurrentPage = sortedTablets.slice(\n    startIndex, startIndex + perPageToNum,\n  );\n\n  const renderContext = () => {\n    if (!isLoading && tablets.length === 0) {\n      return <NoResults category=\"Tablets\" />;\n    }\n\n    if (!isLoading && isError) {\n      return <h1>{isError}</h1>;\n    }\n\n    if (query && sortedTablets.length === 0) {\n      return <NoSearchResults />;\n    }\n\n    return (\n      <>\n        <ProductList\n          productsForCurrentPage={productsForCurrentPage}\n        />\n\n        {pageCount.length > 1 && (\n          <Pagination\n            currentPage={page}\n            pageCount={pageCount}\n            totalLength={totalLength}\n          />\n        )}\n      </>\n    );\n  };\n\n  return (\n    <section className=\"page\">\n      <BreadCrumbs linkName=\"Tablets\" />\n\n      <h1 className=\"text text--h1 page__title\">Tablets</h1>\n\n      <p className=\"text text--gray\">{`${tablets.length} models`}</p>\n\n      <div className=\"page__dropdown-container\">\n        <Dropdown\n          key={sortDropdown.name}\n          dropdown={sortDropdown}\n          currentValue={sort}\n          queryKey={sortDropdown.name}\n          name=\"Sort by\"\n        />\n        <Dropdown\n          key={perPageDropdown.name}\n          dropdown={perPageDropdown}\n          currentValue={perPage.toString()}\n          queryKey={perPageDropdown.name}\n          name=\"Items on page\"\n        />\n      </div>\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"page__main-container\">\n          {renderContext()}\n        </div>\n      )}\n    </section>\n  );\n};\n","import { Loader } from '../../comonents/Loader';\nimport { Dropdown } from '../../comonents/Dropdown';\nimport { Pagination } from '../../comonents/Pagination';\nimport { ProductList } from '../../comonents/ProductList';\nimport { useProducts } from '../../comonents/ProductContext';\nimport { NoResults } from '../../comonents/NoResults';\nimport { SortProducts } from '../../helpers/utils/sortProducts';\nimport { NoSearchResults } from '../../comonents/NoSearchResults';\nimport { BreadCrumbs } from '../../comonents/BreadCrumbs';\n\nimport '../../style/block/page.scss';\n\nexport const AccessoriesPage = () => {\n  const {\n    sortDropdown,\n    perPageDropdown,\n    page,\n    sort,\n    query,\n    perPage,\n    setPerPage,\n    setPageCount,\n    setStartIndex,\n    isLoading,\n    accessories,\n    isError,\n  } = useProducts();\n  const sortedAccessories = SortProducts(accessories, sort, query);\n  const totalLength = sortedAccessories.length;\n  const perPageToNum = setPerPage(totalLength);\n  const pageCount = setPageCount(totalLength, perPageToNum);\n  const startIndex = setStartIndex(perPageToNum);\n  const productsForCurrentPage = sortedAccessories.slice(\n    startIndex, startIndex + perPageToNum,\n  );\n\n  const renderContext = () => {\n    if (!isLoading && accessories.length === 0) {\n      return <NoResults category=\"Accessories\" />;\n    }\n\n    if (!isLoading && isError) {\n      return <h1>{isError}</h1>;\n    }\n\n    if (query && sortedAccessories.length === 0) {\n      return <NoSearchResults />;\n    }\n\n    return (\n      <>\n        <ProductList\n          productsForCurrentPage={productsForCurrentPage}\n        />\n\n        {pageCount.length > 1 && (\n          <Pagination\n            currentPage={page}\n            pageCount={pageCount}\n            totalLength={totalLength}\n          />\n        )}\n      </>\n    );\n  };\n\n  return (\n    <section className=\"page\">\n      <BreadCrumbs linkName=\"Accessories\" />\n\n      <h1 className=\"text text--h1 page__title\">Accessories</h1>\n\n      <p className=\"text text--gray\">{`${accessories.length} models`}</p>\n\n      <div className=\"page__dropdown-container\">\n        <Dropdown\n          key={sortDropdown.name}\n          dropdown={sortDropdown}\n          currentValue={sort}\n          queryKey={sortDropdown.name}\n          name=\"Sort by\"\n        />\n        <Dropdown\n          key={perPageDropdown.name}\n          dropdown={perPageDropdown}\n          currentValue={perPage.toString()}\n          queryKey={perPageDropdown.name}\n          name=\"Items on page\"\n        />\n      </div>\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"page__main-container\">\n          {renderContext()}\n        </div>\n      )}\n    </section>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { useProducts } from '../../comonents/ProductContext';\nimport { ProductList } from '../../comonents/ProductList';\nimport { SortProducts } from '../../helpers/utils/sortProducts';\nimport { NoSearchResults } from '../../comonents/NoSearchResults';\nimport { BreadCrumbs } from '../../comonents/BreadCrumbs';\n\nimport '../../style/block/page.scss';\n\nexport const FavouritesPage = () => {\n  const { favourites, query } = useProducts();\n  const sortedFavourites = SortProducts(favourites, '', query);\n  const { length } = favourites;\n\n  const renderContext = () => {\n    if (length === 0) {\n      return 'You dont have any favourites';\n    }\n\n    if (query && sortedFavourites.length === 0) {\n      return <NoSearchResults />;\n    }\n\n    return <ProductList productsForCurrentPage={sortedFavourites} />;\n  };\n\n  return (\n    <section className=\"page\">\n      <BreadCrumbs linkName=\"Favourites\" />\n\n      <h1 className=\"text text--h1 page__title\">\n        Favourites\n      </h1>\n\n      {length > 0 && (\n        <p className=\"text text--gray\">\n          {length === 1 ? (\n            '1 item'\n          ) : (\n            `${length} items`\n          )}\n        </p>\n      )}\n\n      <div className=\"page__fav-container\">\n        {renderContext()}\n      </div>\n    </section>\n  );\n};\n","import { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { Carts } from '../../type/Carts';\n\nimport './Cart.scss';\n\ntype Props = {\n  cart: Carts,\n  handleCartAction: (\n    id: string, action: 'add' | 'delete' | 'deleteAll') => void,\n};\n\nexport const Cart: React.FC<Props> = ({\n  cart,\n  handleCartAction,\n}) => {\n  const {\n    id,\n    name,\n    price,\n    discount,\n    count,\n  } = cart;\n\n  const productPrice = useMemo(\n    () => price - (price * discount) / 100, [price, discount],\n  );\n\n  const totalPrice = productPrice * count;\n\n  return (\n    <section className=\"cart\" key={id}>\n      <div className=\"cart__cross-container\">\n        <button\n          type=\"button\"\n          title=\"delite item\"\n          className=\"cart__button cart__button--cross\"\n          data-cy=\"cartDeleteButton\"\n          onClick={() => handleCartAction(id, 'deleteAll')}\n        >\n          <span className=\"icon icon--cross\" />\n        </button>\n      </div>\n      <div className=\"cart__img-container\">\n        <img\n          src={`img/products/${id}.0.jpg`}\n          alt=\"product\"\n          className=\"cart__img\"\n        />\n      </div>\n      <div className=\"cart__name-container\">\n        <p className=\"text\">{name}</p>\n      </div>\n      <div className=\"cart__button-container\">\n        <button\n          type=\"button\"\n          title=\"minus\"\n          className={classNames(\n            'cart__button',\n            { 'cart__button--minus': count === 1 },\n          )}\n          onClick={() => handleCartAction(id, 'delete')}\n        >\n          <span className={classNames(\n            'icon',\n            { 'icon--minus': count > 1 },\n            { 'icon--minus-gray': count === 1 },\n          )}\n          />\n        </button>\n        <div className=\"cart__count\">\n          <p className=\"text\">{count}</p>\n        </div>\n        <button\n          type=\"button\"\n          title=\"plus\"\n          className=\"cart__button cart__button--plus\"\n          onClick={() => handleCartAction(id, 'add')}\n        >\n          <span className=\"icon icon--plus\" />\n        </button>\n      </div>\n      <p className=\"text text--h2 cart__price\">{`$${totalPrice}`}</p>\n    </section>\n  );\n};\n","import { useNavigate } from 'react-router-dom';\n\nimport './BackButton.scss';\n\nexport const BackButton = () => {\n  const navigate = useNavigate();\n\n  function goBack() {\n    navigate(-1);\n  }\n\n  return (\n    <div className=\"back\">\n      <span className=\"icon icon--arrow icon--prev\" />\n\n      <button\n        type=\"submit\"\n        onClick={goBack}\n        className=\"text text--small text--gray back__button\"\n        data-cy=\"backButton\"\n      >\n        Back\n      </button>\n    </div>\n  );\n};\n","import classNames from 'classnames';\n\nimport { useState } from 'react';\nimport { useProducts } from '../../comonents/ProductContext';\nimport { Cart } from '../../comonents/Cart';\nimport { getFilteredCarts } from '../../helpers/utils/getFilteredCart';\nimport { Product } from '../../type/Product';\nimport { getTotalPrice } from '../../helpers/utils/getTotalPrice';\n\nimport './CartPage.scss';\nimport { BackButton } from '../../comonents/BackButton';\n\nexport const CartPage = () => {\n  const { setCarts } = useProducts();\n  const { carts } = useProducts();\n  const filteredCarts = getFilteredCarts(carts);\n  const totalPrice = getTotalPrice(carts);\n  const [isMessage, setIsMessage] = useState(false);\n\n  const handleCartAction = (\n    id: string, action: 'add' | 'delete' | 'deleteAll',\n  ) => {\n    let updatedCarts: Product[] = [...carts];\n    let cartToAdd: Product | undefined;\n    let itemIndex: number | undefined;\n\n    switch (action) {\n      case 'add':\n        cartToAdd = carts.find(cart => cart.id === id);\n        if (cartToAdd) {\n          updatedCarts.push(cartToAdd);\n        }\n\n        break;\n\n      case 'delete':\n        itemIndex = updatedCarts.findIndex(cartItem => cartItem.id === id);\n        if (itemIndex !== -1) {\n          updatedCarts.splice(itemIndex, 1);\n        }\n\n        break;\n\n      case 'deleteAll':\n        updatedCarts = updatedCarts.filter(cart => cart.id !== id);\n        break;\n\n      default:\n        break;\n    }\n\n    setCarts(updatedCarts);\n  };\n\n  const handleButtonClick = () => {\n    setIsMessage(true);\n\n    setTimeout(() => {\n      setIsMessage(false);\n    }, 1000);\n  };\n\n  return (\n    <section className=\"carts\">\n      <BackButton />\n\n      <h1 className=\"carts__title\">\n        {carts.length === 0 ? (\n          'Your cart is empty'\n        ) : (\n          'Cart'\n        )}\n      </h1>\n\n      {carts.length > 0 && (\n        <div className=\"carts__main-container\">\n          <div className=\"carts__container\">\n            {filteredCarts.map(cart => (\n              <Cart\n                cart={cart}\n                handleCartAction={handleCartAction}\n                key={cart.id}\n              />\n            ))}\n          </div>\n\n          <div data-cy=\"productQauntity\" className=\"carts__qauntity\">\n            <div className=\"carts__total-price-container\">\n              <h2 className=\"text text--h1\">\n                {`$${totalPrice}`}\n              </h2>\n              <p className=\"text text--gray\">\n                {carts.length > 1 ? (\n                  `Total for ${carts.length} items`\n                ) : (\n                  'Price for 1 item'\n                )}\n              </p>\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"carts__button\"\n              onClick={handleButtonClick}\n            >\n              Checkout\n            </button>\n          </div>\n        </div>\n      )}\n\n      {isMessage && (\n        <div className={classNames(\n          'carts__notification',\n          { 'carts__notification--active': isMessage },\n        )}\n        >\n          We are sorry, but this feature is not implemented yet\n        </div>\n      )}\n    </section>\n  );\n};\n","import { Carts } from '../../type/Carts';\nimport { Product } from '../../type/Product';\n\nexport function getFilteredCarts(carts: Product[]): Carts[] {\n  const filteredCarts: { [id: string]: Carts } = {};\n\n  carts.forEach((cart) => {\n    const {\n      id,\n      price,\n      discount,\n      name,\n    } = cart;\n\n    if (filteredCarts[id]) {\n      filteredCarts[id].count += 1;\n    } else {\n      filteredCarts[id] = {\n        id,\n        count: 1,\n        price,\n        discount,\n        name,\n      };\n    }\n  });\n\n  const sortedCarts = Object.keys(filteredCarts)\n    .sort()\n    .map(id => filteredCarts[id]);\n\n  return sortedCarts;\n}\n","import { Product } from '../../type/Product';\n\nexport function getTotalPrice(carts: Product[]) {\n  const priceMap = carts.map(\n    cart => cart.price - (cart.price * cart.discount) / 100,\n  );\n\n  const totalPrice = priceMap.reduce((acc, value) => {\n    return acc + value;\n  }, 0);\n\n  return totalPrice;\n}\n","import './About.scss';\n\ntype Props = {\n  description: string,\n  screen: string,\n  screenResolution: string,\n  os: string,\n  ram: string,\n  type: string,\n  primary: string,\n  capacity: string,\n};\n\nexport const About: React.FC<Props> = ({\n  description,\n  screen,\n  screenResolution,\n  os,\n  ram,\n  type,\n  primary,\n  capacity,\n}) => {\n  return (\n    <div className=\"about\">\n      <div className=\"about__description\">\n        <h2 className=\"about__title\">\n          About\n        </h2>\n\n        <div\n          className=\"about__text text\"\n          data-cy=\"productDescription\"\n        >\n          {description}\n        </div>\n      </div>\n\n      <div className=\"about__tech\">\n        <h2 className=\"about__title\">\n          Tech space\n        </h2>\n        <ul className=\"about__tech about__tech--container\">\n          <li className=\"about__info\">\n            <p className=\"text text--gray\">Screen</p>\n            <p className=\"text\">{screen}</p>\n          </li>\n          <li className=\"about__info\">\n            <p className=\"text text--gray\">\n              Resolution\n            </p>\n            <p className=\"text\">{screenResolution}</p>\n          </li>\n          <li className=\"about__info\">\n            <p className=\"text text--gray\">OS</p>\n            <p className=\"text\">{os}</p>\n          </li>\n          <li className=\"about__info\">\n            <p className=\"text text--gray\">Ram</p>\n            <p className=\"text\">{ram}</p>\n          </li>\n          <li className=\"about__info\">\n            <p className=\"text text--gray\">\n              Battery\n            </p>\n            <p className=\"text\">\n              {type}\n            </p>\n          </li>\n          <li className=\"about__info\">\n            <p className=\"text text--gray\">Camera</p>\n            <p className=\"text\">{primary}</p>\n          </li>\n          <li className=\"about__info\">\n            <p className=\"text text--gray\">Capacity</p>\n            <p className=\"text\">{capacity}</p>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import './Option.scss';\n\nexport const Option = () => {\n  return (\n    <div className=\"options\">\n      <div className=\"options__container\">\n        <p className=\"text text--small text--gray\">\n          Available colors\n        </p>\n        <div className=\"options__select-container\">\n          <p\n            className=\"\n                options__color-button options__color-button--selected\"\n          >\n            <span className=\"options__color options__color--red\" />\n          </p>\n\n          <p\n            className=\"options__color-button\"\n          >\n            <span\n              className=\"options__color options__color--green\"\n            />\n          </p>\n\n          <p\n            className=\"options__color-button\"\n          >\n            <span className=\"options__color options__color--sec\" />\n          </p>\n        </div>\n      </div>\n\n      <div className=\"options__container options__container--capacity\">\n        <p className=\"text text--small text--gray\">\n          Select capacity\n        </p>\n        <div className=\"options__select-container\">\n          <p className=\"\n                        options__capacity options__capacity--selected\"\n          >\n            64 gb\n          </p>\n\n          <p className=\"options__capacity\">\n            256 gb\n          </p>\n\n          <p className=\"options__capacity\">\n            512 gb\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\n\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport { useProducts } from '../../comonents/ProductContext';\nimport { Loader } from '../../comonents/Loader';\nimport { ProductSlider } from '../../comonents/ProductSlider';\nimport { Carousel } from '../../comonents/Carousel';\nimport { About } from '../../comonents/About';\nimport { Button } from '../../comonents/Button';\nimport { Option } from '../../comonents/Options';\nimport { BackButton } from '../../comonents/BackButton';\n\nimport './ProductDetailsPage.scss';\n\nexport const ProductDetailsPage = () => {\n  const {\n    productDetails,\n    selectedProduct,\n    setSelectedProductId,\n    isLoading,\n    randomProducts,\n    getArrayLength,\n    isProductNotFound,\n  } = useProducts();\n  const [imgIndex, setImgIndex] = useState(0);\n  const { productId } = useParams();\n  const { state } = useLocation();\n  const location = useLocation();\n\n  const {\n    android,\n    battery,\n    camera,\n    description,\n    display,\n    id,\n    images,\n  } = productDetails;\n\n  const { os } = android;\n  const { type } = battery;\n  const { primary } = camera;\n  const { screenResolution } = display;\n\n  const {\n    price,\n    discount,\n    screen,\n    capacity,\n    ram,\n    name,\n  } = selectedProduct;\n\n  const priceWithDiscount = price - (price * discount) / 100;\n  const getBackButtonName = location.pathname.split('/')[1];\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const length = getArrayLength(randomProducts);\n\n  useEffect(() => {\n    if (productId) {\n      setSelectedProductId(productId);\n    }\n\n    return () => {\n      setSelectedProductId('');\n    };\n  }, [productId, setSelectedProductId]);\n\n  const handleImageClick = (e: React.MouseEvent, index: number) => {\n    e.preventDefault();\n    setImgIndex(index);\n  };\n\n  const renderContext = () => {\n    if (isProductNotFound) {\n      return (\n        <div>\n          <BackButton />\n          <h2>\n            Phone was not found\n          </h2>\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <div\n          className=\"details__bread-crumbs\"\n          data-cy=\"breadCrumbs\"\n        >\n          <Link to=\"/\">\n            <span className=\"icon icon--home\" />\n          </Link>\n\n          <span className=\"icon icon--arrow-dis icon--next\" />\n\n          <Link\n            to={{\n              pathname: '..',\n              search: state?.search,\n            }}\n            className=\"text text--small\"\n          >\n            {getBackButtonName}\n          </Link>\n\n          <span className=\"icon icon--arrow-dis icon--next\" />\n\n          <p className=\"text text--small text--gray\">\n            {name.toLowerCase()}\n          </p>\n        </div>\n\n        <BackButton />\n\n        <h1 className=\"details__title text text--h1\">\n          {name.toLowerCase()}\n        </h1>\n\n        <section className=\"details__main-container\">\n          <ul className=\"details__images-container\">\n            {images.map((img, index) => (\n              <li\n                key={img}\n                className={classNames(\n                  'details__image-container',\n                  {\n                    'details__image-container--selected':\n                      imgIndex === index,\n                  },\n                )}\n              >\n                <a\n                  href=\"/\"\n                  type=\"button\"\n                  onClick={(e) => handleImageClick(e, index)}\n                >\n                  <img\n                    className=\"details__img\"\n                    src={`img/products/${id}.${index}.jpg`}\n                    alt=\"img\"\n                  />\n                </a>\n              </li>\n            ))}\n          </ul>\n\n          <div className=\"details__selected-img-container\">\n            <img\n              src={`img/products/${productDetails.id}.${imgIndex}.jpg`}\n              alt=\"img\"\n              className=\"details__img details__img--selected\"\n            />\n          </div>\n\n          <div className=\"details__inner-container\">\n            <Option />\n\n            <div className=\"details__info-container\">\n              <div className=\"details__price-container\">\n                {discount > 0 && (\n                  <p className=\"text text--h1\">{`$${priceWithDiscount}`}</p>\n                )}\n\n                <p className={classNames(\n                  'text',\n                  'text--h1',\n                  { 'text--h2-strikethrough': discount > 0 },\n                  { 'text--gray': discount > 0 },\n                )}\n                >\n                  {`$${price}`}\n                </p>\n              </div>\n\n              <Button\n                name=\"details\"\n                product={selectedProduct}\n              />\n\n              <ul className=\"details__info-container\">\n                <li className=\"details__info\">\n                  <p className=\"text text--gray text--small\">\n                    Screen\n                  </p>\n                  <p className=\"text text--small\">\n                    {screen}\n                  </p>\n                </li>\n                <li className=\"details__info\">\n                  <p className=\"text text--gray text--small\">\n                    Resolution\n                  </p>\n                  <p className=\"text text--small\">\n                    {screenResolution}\n                  </p>\n                </li>\n                <li className=\"details__info\">\n                  <p className=\"text text--gray text--small\">\n                    OS\n                  </p>\n                  <p className=\"text text--small\">\n                    {os}\n                  </p>\n                </li>\n                <li className=\"details__info\">\n                  <p className=\"text text--gray text--small\">\n                    Ram\n                  </p>\n                  <p className=\"text text--small\">\n                    {ram}\n                  </p>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </section>\n\n        <About\n          description={description}\n          screen={screen}\n          screenResolution={screenResolution}\n          os={os}\n          ram={ram}\n          type={type}\n          primary={primary}\n          capacity={capacity}\n        />\n\n        <div className=\"details__carousel-container\">\n          <div className=\"container\">\n            <h2>You may also like</h2>\n            <ProductSlider\n              currentSlide={currentSlide}\n              setCurrentSlide={setCurrentSlide}\n              length={length}\n            />\n          </div>\n\n          <Carousel\n            products={randomProducts}\n            currentSlide={currentSlide}\n            id=\"random\"\n          />\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <section className=\"details\">\n      {isLoading ? (\n        <Loader />\n      ) : (\n        renderContext()\n      )}\n    </section>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PhonesPage } from './pages/PhonesPage';\nimport { TabletsPage } from './pages/TabletsPage';\nimport { AccessoriesPage } from './pages/AccessoriesPage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { FavouritesPage } from './pages/FavouritesPage';\nimport { CartPage } from './pages/CartPage';\nimport { ProductsProvider } from './comonents/ProductContext';\nimport { ProductDetailsPage } from './pages/ProductDetailsPage';\n\nexport const Root = () => {\n  return (\n    <Router>\n      <ProductsProvider>\n        <Routes>\n          <Route path=\"/\" element={<App />}>\n            <Route index element={<HomePage />} />\n            <Route path=\"phones\">\n              <Route index element={<PhonesPage />} />\n              <Route path=\":productId\" element={<ProductDetailsPage />} />\n            </Route>\n            <Route path=\"tablets\">\n              <Route index element={<TabletsPage />} />\n              <Route path=\":productId\" element={<ProductDetailsPage />} />\n            </Route>\n            <Route path=\"accessories\">\n              <Route index element={<AccessoriesPage />} />\n              <Route path=\":productId\" element={<ProductDetailsPage />} />\n            </Route>\n            <Route path=\"favourites\">\n              <Route index element={<FavouritesPage />} />\n              <Route path=\":productId\" element={<ProductDetailsPage />} />\n            </Route>\n            <Route path=\"cart\">\n              <Route index element={<CartPage />} />\n            </Route>\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n            <Route\n              path=\"*\"\n              element={<NotFoundPage />}\n            />\n          </Route>\n        </Routes>\n      </ProductsProvider>\n    </Router>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Root } from './Root';\n\nReactDOM.render(\n  <Root />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}