{"version":3,"sources":["comonents/Footer/Footer.tsx","helpers/functions/sortHelperFunctions.ts","helpers/fetch/httpClient.ts","comonents/api/products.ts","comonents/api/phones.ts","comonents/api/tablets.ts","comonents/api/accessories.ts","helpers/localStorage/useLocalStorage.ts","helpers/fetch/fetchClient.ts","comonents/api/productDetails.ts","comonents/ProductContext/ProductContext.tsx","helpers/utils/getSearchWith.tsx","comonents/Header/Header.tsx","App.tsx","comonents/Banner/Banner.tsx","comonents/Button/Button.tsx","comonents/ProductCard/ProductCard.tsx","comonents/Carousel/Carousel.tsx","comonents/ProductSlider/ProductSlider.tsx","comonents/BrandNew/BrandNew.tsx","comonents/Category/Category.tsx","comonents/HotPrices/HotPrices.tsx","comonents/Loader/Loader.tsx","pages/HomePage/HomePage.tsx","comonents/Dropdown/Dropdown.tsx","comonents/Pagination/Pagination.tsx","comonents/ProductList/ProductList.tsx","comonents/NoResults/NoResults.tsx","helpers/utils/sortProducts.ts","comonents/NoSearchResults/NoSearchResults.tsx","comonents/BreadCrumbs/BreadCrumbs.tsx","pages/PhonesPage/PhonesPage.tsx","pages/TabletsPage/TabletsPage.tsx","pages/AccessoriesPage/AccessoriesPage.tsx","pages/NotFoundPage/NotFoundPage.tsx","pages/FavouritesPage/FavouritesPage.tsx","comonents/Cart/Cart.tsx","comonents/BackButton/BackButton.tsx","pages/CartPage/CartPage.tsx","helpers/utils/getFilteredCart.ts","helpers/utils/getTotalPrice.ts","comonents/About/About.tsx","comonents/Options/Option.tsx","pages/ProductDetailsPage/ProductDetailsPage.tsx","Root.tsx","index.tsx"],"names":["Footer","handleButtonClick","window","scrollTo","top","className","to","title","onClick","target","rel","type","filterProductsByType","products","filter","product","filterProductsById","id","request","url","delay","Promise","resolve","setTimeout","then","fetch","response","json","client","getProducts","getHotPriceProducts","filteredProducts","discount","sortFunction","sortedProducts","sort","productA","productB","absoluteDiscountA","price","absoluteDiscountB","Number","getPhones","a","data","getTablets","getAccessories","useLocalStorage","key","startValue","useState","localStorage","getItem","JSON","parse","e","value","setValue","newValue","setItem","stringify","fetchProducts","getData","setData","setIsError","setIsLoading","name","console","error","fetchDetails","selectedProductId","setProductDetails","setSelectedProduct","setIsProductNotFound","foundProduct","find","p","ProductsContext","React","createContext","hotPriceProducts","newBrandProducts","links","sortDropdown","options","isOpen","perPageDropdown","page","query","perPage","setPerPage","setPageCount","setStartIndex","phones","isLoading","tablets","accessories","setCurrentOption","productDetails","android","os","battery","camera","primary","description","display","screenResolution","images","setSelectedProductId","selectedProduct","age","screen","capacity","ram","getArrayLength","carts","setCarts","randomProducts","favourites","setFavourites","isProductAdded","getArrayUpdates","isProductNotFound","isError","prevSearch","setPrevSearch","isMessage","setIsMessage","ProductsProvider","children","setProducts","useSearchParams","searchParams","location","useLocation","setHotPriceProducts","setNewBrandProducts","setTablets","setPhones","setAccessories","useEffect","ProductClient","pathname","setRandomProducts","count","productsRandom","availableProducts","length","push","shuffledProducts","Math","random","slice","get","productsToCheck","some","productValue","Newest","Alphabetically","Cheapest","All","perPageToNum","Array","from","ceil","_","index","currentValue","Object","keys","array","productsToUpdare","productToCheck","Provider","useProducts","useContext","getSearchWith","currrentParams","paramsToUpdate","newParams","URLSearchParams","toString","entries","forEach","delete","set","Header","isHomePage","isCartPage","isProductDetailsPage","link","getPlaceholderText","split","getLinkClass","isActive","classNames","setSearchParams","inputValue","setInputValue","setDebounceSearchWidth","useCallback","debounce","search","placeholder","onChange","updatedInput","App","Banner","activeSlide","setActiveSlide","totalSlides","action","prevSlide","autoChangeSlide","intervalId","setInterval","clearInterval","map","src","alt","Button","isProductInCart","isProductInFavourites","preventDefault","updatesProducts","ProductCard","priceWithDiscount","useMemo","state","Carousel","currentSlide","firstItem","document","querySelector","itemWidth","clientWidth","querySelectorAll","style","transform","buttons","ProductSlider","setCurrentSlide","isPrevDisabled","isNextDisabled","newSlide","BrandNew","currentBrandNewSlide","setCurrentBrandNewSlide","Category","renderContext","productType","HotPrices","currentHotPriceSlide","setCurrentHotPriceSlide","Loader","HomePage","Dropdown","dropdown","queryKey","isOpenState","setIsOpenState","dropdownRef","useRef","selectedOption","handleClickOutside","event","current","contains","addEventListener","removeEventListener","handleClick","ref","option","Pagination","currentPage","pageCount","totalLength","isPrev","isNext","ProductList","productsForCurrentPage","NoResults","category","SortProducts","localeCompare","queryValue","toLowerCase","includes","NoSearchResults","BreadCrumbs","linkName","PhonesPage","sortedPhones","startIndex","TabletsPage","sortedTablets","AccessoriesPage","sortedAccessories","NotFoundPage","FavouritesPage","sortedFavourites","Cart","cart","handleCartAction","totalPrice","BackButton","navigate","useNavigate","CartPage","filteredCarts","getFilteredCarts","reduce","acc","getTotalPrice","cartToAdd","itemIndex","updatedCarts","findIndex","cartItem","splice","About","Option","isCapacity","setIsCapacity","isColor","setIsColor","handleCapacityChange","handleColorCahange","ProductDetailsPage","imgIndex","setImgIndex","productId","useParams","getBackButtonName","img","href","handleImageClick","Root","path","element","replace","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.220dc9c4.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\n\nimport './Footer.scss';\n\nexport const Footer = () => {\n  const handleButtonClick = () => {\n    window.scrollTo({\n      top: 0,\n    });\n  };\n\n  return (\n    <footer className=\"footer\">\n      <Link\n        to=\"/\"\n        title=\"Back to home page\"\n        className=\"icon icon--logo\"\n        onClick={handleButtonClick}\n      />\n\n      <div className=\"container footer__link-container\">\n        <Link\n          className=\"text text--small text--gray\"\n          to=\"https://github.com/Pa1eOrc/react_phone-catalog\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Github\n        </Link>\n        <Link\n          to=\"/\"\n          className=\"text text--small text--gray\"\n        >\n          Contacts\n        </Link>\n        <Link\n          to=\"/\"\n          className=\"text text--small text--gray\"\n        >\n          Rights\n        </Link>\n      </div>\n\n      <div className=\"footer__button-container\">\n        <p className=\"text text--small text--gray\">Back to top</p>\n        <button\n          className=\"footer__button\"\n          type=\"button\"\n          title=\"Back to top\"\n          onClick={handleButtonClick}\n        >\n          <span className=\"icon icon--arrow\" />\n        </button>\n      </div>\n    </footer>\n  );\n};\n","import { Product } from '../../type/Product';\n\nexport function filterProductsByDiscount(products: Product[]): Product[] {\n  return products.filter(product => product.discount > 0);\n}\n\nexport function sortProductsByAbsoluteDiscount(products: Product[]): Product[] {\n  return products.sort((productA: Product, productB: Product) => {\n    const absoluteDiscountA = (productA.price * productA.discount) / 100;\n    const absoluteDiscountB = (productB.price * productB.discount) / 100;\n\n    return Number(absoluteDiscountA) - Number(absoluteDiscountB);\n  });\n}\n\nexport function filterProductsWithoutDiscount(products: Product[]): Product[] {\n  return products.filter(product => product.discount === 0);\n}\n\nexport function sortProductsByPrice(products: Product[]): Product[] {\n  return products.sort((productA: Product, productB: Product) => {\n    return productB.price - productA.price;\n  });\n}\n\nexport function filterProductsByType(\n  products: Product[], type: string,\n): Product[] {\n  return products.filter(product => product.type === type);\n}\n\nexport function filterProductsById(\n  products: Product[], id: string,\n) {\n  return products.filter(\n    product => product.id !== id,\n  );\n}\n","// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_phone-catalog/api';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction request<T>(url: string): Promise<T> {\n  return wait(300)\n    .then(() => fetch(BASE_URL + url))\n    .then(response => response.json());\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n};\n","import { Product } from '../../type/Product';\nimport * as sortFunction from '../../helpers/functions/sortHelperFunctions';\nimport { client } from '../../helpers/fetch/httpClient';\n\nexport function getProducts() {\n  return client.get<Product[]>('/products.json');\n}\n\nexport const getHotPriceProducts = (products: Product[]) => {\n  const filteredProducts = sortFunction.filterProductsByDiscount(products);\n  const sortedProducts = sortFunction\n    .sortProductsByAbsoluteDiscount(filteredProducts);\n\n  return sortedProducts;\n};\n\nexport const getBrandNewProducts = (products: Product[]) => {\n  const filteredProducts = sortFunction\n    .filterProductsWithoutDiscount(products);\n  const sortedProducts = sortFunction\n    .sortProductsByPrice(filteredProducts);\n\n  return sortedProducts;\n};\n\nexport const getSuggestedProducts = (\n  products: Product[], id: string, count: number,\n) => {\n  const productsRandom = [];\n  const availableProducts = sortFunction.filterProductsById(products, id);\n\n  if (availableProducts.length < count) {\n    productsRandom.push(...availableProducts);\n  } else {\n    const shuffledProducts = availableProducts.sort(\n      () => Math.random() - 0.5,\n    );\n\n    productsRandom.push(...shuffledProducts.slice(0, count));\n  }\n\n  return productsRandom;\n};\n","import { Product } from '../../type/Product';\nimport { client } from '../../helpers/fetch/httpClient';\nimport {\n  filterProductsByType,\n} from '../../helpers/functions/sortHelperFunctions';\n\nconst url = '/products.json';\n\nexport async function getPhones() {\n  const data = await client.get<Product[]>(url);\n\n  return filterProductsByType(data, 'phone');\n}\n","import { Product } from '../../type/Product';\nimport { client } from '../../helpers/fetch/httpClient';\nimport {\n  filterProductsByType,\n} from '../../helpers/functions/sortHelperFunctions';\n\nconst url = '/products.json';\n\nexport async function getTablets() {\n  const data = await client.get<Product[]>(url);\n\n  return filterProductsByType(data, 'tablet');\n}\n","import { Product } from '../../type/Product';\nimport { client } from '../../helpers/fetch/httpClient';\nimport {\n  filterProductsByType,\n} from '../../helpers/functions/sortHelperFunctions';\n\nconst url = '/products.json';\n\nexport async function getAccessories() {\n  const data = await client.get<Product[]>(url);\n\n  return filterProductsByType(data, 'accessory');\n}\n","import { useState } from 'react';\n\nexport function useLocalStorage<T>(\n  key: string, startValue: T,\n): [T, (v: T) => void] {\n  const [value, setValue] = useState(() => {\n    const data = localStorage.getItem(key);\n\n    if (data === null) {\n      return startValue;\n    }\n\n    try {\n      return JSON.parse(data);\n    } catch (e) {\n      return startValue;\n    }\n  });\n\n  const saveValue = (newValue: T) => {\n    localStorage.setItem(key, JSON.stringify(newValue));\n    setValue(newValue);\n  };\n\n  return [value, saveValue];\n}\n","/* eslint-disable no-console */\nimport { getProductDetails } from '../../comonents/api/productDetails';\nimport { Product } from '../../type/Product';\nimport { ProductDeatails } from '../../type/ProductDetails';\n\nexport const fetchProducts = async (\n  getData: () => Promise<Product[]>,\n  setData: (data: Product[]) => void,\n  setIsError: (isError: string) => void,\n  setIsLoading: (isLoading: boolean) => void,\n  name: string,\n) => {\n  setIsLoading(true);\n  setIsError('');\n  try {\n    const data = await getData();\n\n    setData(data);\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    setIsError(`Error fetching ${name}`);\n  } finally {\n    setIsLoading(false);\n  }\n};\n\nexport const fetchDetails = async (\n  selectedProductId: string,\n  setProductDetails: (details: ProductDeatails) => void,\n  setSelectedProduct: (product: Product) => void,\n  setIsProductNotFound: (isProductNotFound: boolean) => void,\n  setIsError: (isError: string) => void,\n  setIsLoading: (isLoading: boolean) => void,\n  products: Product[],\n  name: string,\n) => {\n  if (selectedProductId) {\n    setIsLoading(true);\n    setIsError('');\n\n    try {\n      const data = await getProductDetails(selectedProductId);\n\n      setProductDetails(data);\n      const foundProduct = products.find((p) => p.id === selectedProductId);\n\n      if (foundProduct) {\n        setIsProductNotFound(false);\n        setSelectedProduct(foundProduct);\n      } else {\n        setIsProductNotFound(true);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setIsError(`Error fetching ${name}`);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n};\n","import { ProductDeatails } from '../../type/ProductDetails';\nimport { client } from '../../helpers/fetch/httpClient';\n\nexport function getProductDetails(id: string) {\n  return client.get<ProductDeatails>(`/products/${id}.json`);\n}\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { Product } from '../../type/Product';\nimport * as ProductClient from '../api/products';\nimport { DropdownIterface, Option } from '../../type/Dropdown';\nimport { getPhones } from '../api/phones';\nimport { getTablets } from '../api/tablets';\nimport { getAccessories } from '../api/accessories';\nimport { ProductDeatails } from '../../type/ProductDetails';\nimport { useLocalStorage } from '../../helpers/localStorage/useLocalStorage';\nimport { fetchProducts, fetchDetails } from '../../helpers/fetch/fetchClient';\nimport { filterProductsById }\n  from '../../helpers/functions/sortHelperFunctions';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype ProductsContextProps = {\n  products: Product[],\n  hotPriceProducts: Product[],\n  newBrandProducts: Product[],\n  links: string[],\n  sortDropdown: DropdownIterface,\n  perPageDropdown: DropdownIterface,\n  page: number,\n  sort: string,\n  query: string,\n  perPage: string,\n  setPerPage: (length: number) => number;\n  setPageCount: (length: number, perPageToNum: number) => number[],\n  setStartIndex: (perPageToNum: number) => number,\n  phones: Product[],\n  isLoading: boolean,\n  tablets: Product[]\n  accessories: Product[],\n  setCurrentOption: (options: Option, currentValue: string) => string,\n  productDetails: ProductDeatails,\n  selectedProductId: string,\n  setSelectedProductId: (selectedProductId: string) => void,\n  selectedProduct: Product,\n  getArrayLength: (array: Product[]) => number,\n  carts: Product[],\n  setCarts: (v: Product[]) => void,\n  randomProducts: Product[],\n  favourites: Product[],\n  setFavourites: (v: Product[]) => void,\n  isProductAdded: (productsToCheck: Product[], id: string) => boolean,\n  getArrayUpdates: (\n    productsToUpdare: Product[], productToCheck: Product) => Product[],\n  isProductNotFound: boolean;\n  isError: string,\n  prevSearch: {\n    sort: string,\n    page: number,\n    perPage: string,\n  },\n  setPrevSearch: (prevSearch: {\n    sort: string,\n    page: number,\n    perPage: string,\n  }) => void,\n  isMessage: boolean,\n  setIsMessage: (isMessage: boolean) => void,\n};\n\nexport const ProductsContext = React.createContext<ProductsContextProps>({\n  products: [],\n  hotPriceProducts: [],\n  newBrandProducts: [],\n  links: [],\n  sortDropdown: {\n    name: '',\n    options: {},\n    isOpen: false,\n  },\n  perPageDropdown: {\n    name: '',\n    options: {},\n    isOpen: false,\n  },\n  page: 0,\n  sort: '',\n  query: '',\n  perPage: '',\n  setPerPage: () => 0,\n  setPageCount: () => [],\n  setStartIndex: () => 0,\n  phones: [],\n  isLoading: true,\n  tablets: [],\n  accessories: [],\n  setCurrentOption: () => '',\n  productDetails: {\n    android: {\n      os: '',\n    },\n    battery: {\n      type: '',\n    },\n    camera: {\n      primary: '',\n    },\n    description: '',\n    display: {\n      screenResolution: '',\n    },\n    id: '',\n    images: [],\n    name: '',\n  },\n  selectedProductId: '',\n  setSelectedProductId: () => '',\n  selectedProduct: {\n    type: '',\n    price: 0,\n    discount: 0,\n    age: 0,\n    id: '',\n    screen: '',\n    capacity: '',\n    ram: '',\n    name: '',\n  },\n  getArrayLength: () => 0,\n  carts: [],\n  setCarts: () => [],\n  randomProducts: [],\n  favourites: [],\n  setFavourites: () => [],\n  isProductAdded: () => false,\n  getArrayUpdates: () => [],\n  isProductNotFound: false,\n  isError: '',\n  prevSearch: {\n    sort: '',\n    page: 1,\n    perPage: '',\n  },\n  setPrevSearch: () => { },\n  isMessage: false,\n  setIsMessage: () => {},\n});\n\nexport const ProductsProvider: React.FC<Props> = ({ children }) => {\n  const [products, setProducts] = useState<Product[]>([]);\n  const [searchParams] = useSearchParams();\n  const location = useLocation();\n  const [hotPriceProducts, setHotPriceProducts] = useState<Product[]>([]);\n  const [newBrandProducts, setNewBrandProducts] = useState<Product[]>([]);\n  const [tablets, setTablets] = useState<Product[]>([]);\n  const [phones, setPhones] = useState<Product[]>([]);\n  const [accessories, setAccessories] = useState<Product[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const links = ['phones', 'tablets', 'accessories', 'favourites'];\n  const [isError, setIsError] = useState('');\n  const [isMessage, setIsMessage] = useState(false);\n\n  useEffect(() => {\n    fetchProducts(\n      ProductClient.getProducts,\n      setProducts,\n      setIsError,\n      setIsLoading,\n      'products',\n    );\n  }, []);\n\n  useEffect(() => {\n    setHotPriceProducts(ProductClient.getHotPriceProducts(products));\n    setNewBrandProducts(ProductClient.getBrandNewProducts(products));\n  }, [products]);\n\n  useEffect(() => {\n    if (location.pathname === '/phones') {\n      fetchProducts(getPhones, setPhones, setIsError, setIsLoading, 'phones');\n    }\n\n    if (location.pathname === '/tablets') {\n      fetchProducts(\n        getTablets, setTablets, setIsError, setIsLoading, 'tablets',\n      );\n    }\n\n    if (location.pathname === '/accessories') {\n      fetchProducts(\n        getAccessories, setAccessories, setIsError, setIsLoading, 'accessories',\n      );\n    }\n  }, [location.pathname]);\n\n  // #region Details\n  const count = 8;\n  const [selectedProductId, setSelectedProductId] = useState('');\n  const [productDetails, setProductDetails] = useState<ProductDeatails>({\n    android: {\n      os: '',\n    },\n    battery: {\n      type: '',\n    },\n    camera: {\n      primary: '',\n    },\n    description: '',\n    display: {\n      screenResolution: '',\n    },\n    id: '',\n    images: [],\n    name: '',\n  });\n  const [selectedProduct, setSelectedProduct] = useState<Product>({\n    type: '',\n    price: 0,\n    discount: 0,\n    age: 0,\n    id: '',\n    screen: '',\n    capacity: '',\n    ram: '',\n    name: '',\n  });\n  const [randomProducts, setRandomProducts] = useState<Product[]>([]);\n  const [isProductNotFound, setIsProductNotFound] = useState(false);\n\n  useEffect(() => {\n    fetchDetails(\n      selectedProductId,\n      setProductDetails,\n      setSelectedProduct,\n      setIsProductNotFound,\n      setIsError,\n      setIsLoading,\n      products,\n      'product details',\n    );\n  }, [selectedProductId, products]);\n\n  useEffect(() => {\n    setRandomProducts(\n      ProductClient.getSuggestedProducts(products, selectedProductId, count),\n    );\n  }, [selectedProductId, products, count]);\n\n  // #endregion Details\n\n  //  #region Pagination, Dropdown, Carousel\n  const sortDropdown: DropdownIterface = {\n    name: 'sort',\n    options: {\n      Newest: 'age',\n      Alphabetically: 'name',\n      Cheapest: 'price',\n    },\n    isOpen: false,\n  };\n\n  const perPageDropdown: DropdownIterface = {\n    name: 'perPage',\n    options: {\n      4: '4',\n      8: '8',\n      16: '16',\n      All: 'all',\n    },\n    isOpen: false,\n  };\n  const page = +(searchParams.get('page') || 1);\n  const sort = searchParams.get('sort') || 'age';\n  const perPage = searchParams.get('perPage') || '16';\n  const query = searchParams.get('query') || '';\n  const itemsPerPage = 4;\n  const [prevSearch, setPrevSearch] = useState({\n    sort: '',\n    page: 1,\n    perPage: '',\n  });\n\n  function getArrayLength(array: Product[]) {\n    return array.length - itemsPerPage;\n  }\n\n  function setPerPage(length: number) {\n    return perPage === 'all' ? length : +perPage;\n  }\n\n  function setPageCount(length: number, perPageToNum: number) {\n    return Array.from(\n      { length: Math.ceil(length / perPageToNum) },\n      (_, index) => index + 1,\n    );\n  }\n\n  function setStartIndex(perPageToNum: number) {\n    return (page - 1) * perPageToNum;\n  }\n\n  function setCurrentOption(options: Option, currentValue: string): string {\n    const foundKey = Object.keys(options).find(\n      key => options[key] === currentValue,\n    );\n\n    return foundKey || '';\n  }\n\n  useEffect(() => {\n    setIsLoading(true);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 200);\n  }, [page, perPage, sort]);\n  //  #endregion Pagination & Dropdown\n\n  // #region Cart & Favourites\n  const [carts, setCarts] = useLocalStorage<Product[]>('cart', []);\n  const [favourites, setFavourites] = useLocalStorage<Product[]>(\n    'favourites', [],\n  );\n\n  function isProductAdded(productsToCheck: Product[], id: string) {\n    return productsToCheck.some(product => product.id === id);\n  }\n\n  function getArrayUpdates(\n    productsToUpdare: Product[], productToCheck: Product,\n  ) {\n    const productIsAdded = isProductAdded(productsToUpdare, productToCheck.id);\n    let updatedProducts = [];\n\n    if (productIsAdded) {\n      updatedProducts = filterProductsById(productsToUpdare, productToCheck.id);\n    } else {\n      updatedProducts = [...productsToUpdare, productToCheck];\n    }\n\n    return updatedProducts;\n  }\n  // #endregion Cart\n\n  const productValue: ProductsContextProps = {\n    products,\n    hotPriceProducts,\n    newBrandProducts,\n    links,\n    sortDropdown,\n    perPageDropdown,\n    page,\n    sort,\n    query,\n    perPage,\n    setPerPage,\n    setPageCount,\n    setStartIndex,\n    isLoading,\n    phones,\n    tablets,\n    accessories,\n    setCurrentOption,\n    productDetails,\n    selectedProductId,\n    setSelectedProductId,\n    selectedProduct,\n    getArrayLength,\n    carts,\n    setCarts,\n    randomProducts,\n    favourites,\n    setFavourites,\n    isProductAdded,\n    getArrayUpdates,\n    isProductNotFound,\n    isError,\n    prevSearch,\n    setPrevSearch,\n    isMessage,\n    setIsMessage,\n  };\n\n  return (\n    <ProductsContext.Provider value={productValue}>\n      {children}\n    </ProductsContext.Provider>\n  );\n};\n\nexport const useProducts = (\n): ProductsContextProps => React.useContext(ProductsContext);\n","import { SearchParams } from '../../type/SearchParams';\n\nexport function getSearchWith(\n  currrentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currrentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  if (paramsToUpdate.sort || paramsToUpdate.perPage) {\n    newParams.delete('page');\n  }\n\n  return newParams.toString();\n}\n","import classNames from 'classnames';\nimport debounce from 'lodash.debounce';\n\nimport { NavLink, useLocation, useSearchParams } from 'react-router-dom';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useProducts } from '../ProductContext';\nimport { getSearchWith } from '../../helpers/utils/getSearchWith';\nimport { SearchParams } from '../../type/SearchParams';\n\nimport './Header.scss';\n\nexport const Header = () => {\n  const {\n    carts,\n    favourites,\n    selectedProductId,\n    query,\n    links,\n  } = useProducts();\n  const location = useLocation();\n  const isHomePage = location.pathname === '/';\n  const isCartPage = location.pathname === '/cart';\n  const isProductDetailsPage = links.some(\n    link => location.pathname === `/${link}/${selectedProductId}`,\n  );\n  const getPlaceholderText = location.pathname.split('/')[1];\n\n  const getLinkClass = (\n    { isActive }: { isActive: boolean },\n  ) => classNames(\n    'navbar__link',\n    { 'navbar__link--active': isActive },\n  );\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState(query);\n\n  const setDebounceSearchWidth = useCallback(\n    debounce((paramsToUpdate: SearchParams) => {\n      const search = getSearchWith(searchParams, paramsToUpdate);\n\n      setSearchParams(search);\n    }, 1000), [searchParams, location.pathname],\n  );\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const updatedInput = { query: e.target.value || null };\n\n    setInputValue(e.target.value);\n    setDebounceSearchWidth(updatedInput);\n  };\n\n  const clearInput = () => {\n    setSearchParams(getSearchWith(searchParams, { query: null }));\n    setInputValue(query);\n  };\n\n  useEffect(() => {\n    setInputValue(query);\n  }, [query]);\n\n  return (\n    <header className=\"header\">\n      <div className=\"header__container\">\n        <div className=\"header__logo-container\">\n          <NavLink to=\"/\" title=\"Back to home page\">\n            <span className=\"icon icon--logo\" />\n          </NavLink>\n        </div>\n\n        {!isCartPage && (\n          <nav className=\"navbar\">\n            <NavLink to=\"/\" className={getLinkClass}>\n              <p className=\"navbar__item\">\n                Home\n              </p>\n            </NavLink>\n\n            <NavLink to=\"/phones\" className={getLinkClass}>\n              <p className=\"navbar__item\">\n                Phones\n              </p>\n            </NavLink>\n\n            <NavLink to=\"/tablets\" className={getLinkClass}>\n              <p className=\"navbar__item\">\n                Tablets\n              </p>\n            </NavLink>\n\n            <NavLink to=\"/accessories\" className={getLinkClass}>\n              <p className=\"navbar__item\">\n                Accessories\n              </p>\n            </NavLink>\n          </nav>\n        )}\n      </div>\n\n      <div className=\"header__container\">\n        {!isCartPage\n        && !isHomePage\n        && !isProductDetailsPage\n        && (\n          <label className=\"header__search-container\">\n            <input\n              type=\"search\"\n              placeholder={`Search in ${getPlaceholderText}...`}\n              className=\"header__search\"\n              value={inputValue}\n              onChange={handleInputChange}\n            />\n\n            {!inputValue ? (\n              <span className=\"icon icon--search\" />\n            ) : (\n              <button\n                onClick={clearInput}\n                type=\"submit\"\n                title=\"clear imput\"\n                className=\"header__clear-button\"\n                data-cy=\"searchDelete\"\n              >\n                <span className=\"icon icon--cross\" />\n              </button>\n            )}\n          </label>\n        )}\n\n        {!isCartPage && (\n          <NavLink\n            to=\"/favourites\"\n            className={getLinkClass}\n          >\n            <div className=\"navbar__item navbar__item--icon\">\n              <span className=\"icon icon--favourites\" />\n              {favourites.length > 0 && (\n                <span className=\"navbar__quantity\">\n                  {favourites.length}\n                </span>\n              )}\n            </div>\n          </NavLink>\n        )}\n\n        <NavLink\n          to=\"/cart\"\n          className={getLinkClass}\n        >\n          <div className=\"navbar__item navbar__item--icon\">\n            <span className=\"icon icon--cart\" />\n            {carts.length > 0 && (\n              <span className=\"navbar__quantity\">\n                {carts.length}\n              </span>\n            )}\n          </div>\n        </NavLink>\n      </div>\n    </header>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Footer } from './comonents/Footer';\nimport { Header } from './comonents/Header';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <main className=\"main\">\n        <Outlet />\n      </main>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import classNames from 'classnames';\n\nimport { Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { useProducts } from '../ProductContext';\n\nimport './Banner.scss';\n\nexport const Banner = () => {\n  const { links } = useProducts();\n  const [activeSlide, setActiveSlide] = useState(0);\n  const totalSlides = links.slice(0, 3).length;\n\n  const handleButtonClick = (action: 'next' | 'prev') => {\n    if (action === 'next') {\n      setActiveSlide(\n        (prevSlide) => (prevSlide < totalSlides - 1 ? prevSlide + 1 : 0),\n      );\n    } else if (action === 'prev') {\n      setActiveSlide(\n        (prevSlide) => (prevSlide === 0 ? totalSlides - 1 : prevSlide - 1),\n      );\n    }\n  };\n\n  const autoChangeSlide = () => {\n    handleButtonClick('next');\n  };\n\n  useEffect(() => {\n    const intervalId = setInterval(autoChangeSlide, 5000);\n\n    return () => clearInterval(intervalId);\n  }, [activeSlide]);\n\n  return (\n    <section className=\"banner\">\n      <div className=\"banner__carousel-container\">\n        <button\n          type=\"button\"\n          className=\"banner__arrow\"\n          title=\"arrow\"\n          onClick={() => handleButtonClick('prev')}\n        >\n          <span className=\"icon icon--arrow icon--prev\" />\n        </button>\n\n        <ul className=\"banner__carousel\">\n          {links.slice(0, 3).map((link, index) => (\n            <li key={link}>\n              <Link\n                to={`/${link}`}\n                className={`banner__link\n              ${index === activeSlide ? 'banner__link--active' : ''}\n              ${index === activeSlide + 1 ? 'banner__link--next' : ''}\n              ${index === activeSlide - 1 ? 'banner__link--prev' : ''}\n              ${activeSlide === 0 && index === totalSlides - 1 ? 'banner__link--prev' : ''}\n              ${activeSlide === totalSlides - 1 && index === 0 ? 'banner__link--next' : ''}\n              `}\n              >\n                <img\n                  className=\"banner__img\"\n                  src={`img/banner/banner-${link}.png`}\n                  alt={`${link} banner`}\n                />\n              </Link>\n            </li>\n          ))}\n        </ul>\n\n        <button\n          type=\"button\"\n          className=\"banner__arrow\"\n          title=\"arrow\"\n          onClick={() => handleButtonClick('next')}\n        >\n          <span className=\"icon icon--arrow icon--next\" />\n        </button>\n      </div>\n\n      <div className=\"banner__dot-container container\">\n        <span\n          className={classNames(\n            'banner__dot',\n            { 'banner__dot--active': activeSlide === 0 },\n          )}\n        />\n        <span\n          className={classNames(\n            'banner__dot',\n            { 'banner__dot--active': activeSlide === 1 },\n          )}\n        />\n        <span\n          className={classNames(\n            'banner__dot',\n            { 'banner__dot--active': activeSlide === 2 },\n          )}\n        />\n      </div>\n    </section>\n  );\n};\n","import classNames from 'classnames';\nimport './Button.scss';\nimport { useProducts } from '../ProductContext';\nimport { Product } from '../../type/Product';\n\ntype Props = {\n  name: string,\n  product: Product,\n};\n\nexport const Button: React.FC<Props> = ({ name, product }) => {\n  const {\n    getArrayUpdates,\n    isProductAdded,\n    carts,\n    setCarts,\n    favourites,\n    setFavourites,\n  } = useProducts();\n\n  const isProductInCart = isProductAdded(carts, product.id);\n  const isProductInFavourites = isProductAdded(favourites, product.id);\n\n  const handleButtonClick = (e: React.MouseEvent, action: string) => {\n    e.preventDefault();\n    let updatesProducts = [];\n\n    if (action === 'cart') {\n      updatesProducts = getArrayUpdates(carts, product);\n      setCarts(updatesProducts);\n    }\n\n    if (action === 'favourites') {\n      updatesProducts = getArrayUpdates(favourites, product);\n      setFavourites(updatesProducts);\n    }\n  };\n\n  return (\n    <div className=\"button\">\n      <button\n        type=\"submit\"\n        className={classNames(\n          'button__add',\n          { 'button__add--selected': isProductInCart },\n          { 'button__add--details': name === 'details' },\n        )}\n        onClick={(e) => handleButtonClick(e, 'cart')}\n      >\n        {isProductInCart ? (\n          'Added to cart'\n        ) : (\n          'Add to cart'\n        )}\n      </button>\n\n      <button\n        type=\"submit\"\n        title=\"favourites\"\n        data-cy=\"addToFavorite\"\n        className={classNames(\n          'button__fav',\n          { 'button__fav--details': name === 'details' },\n        )}\n        onClick={(e) => handleButtonClick(e, 'favourites')}\n      >\n        <span className={classNames(\n          'icon',\n          'icon--favourites',\n          { 'icon--favourites-red': isProductInFavourites },\n        )}\n        />\n      </button>\n    </div>\n  );\n};\n","import { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport React, { useMemo } from 'react';\nimport { Product } from '../../type/Product';\nimport { Button } from '../Button';\n\nimport './ProductCard.scss';\n\ntype Props = {\n  product: Product\n};\n\nexport const ProductCard: React.FC<Props> = ({ product }) => {\n  const {\n    name,\n    id,\n    price,\n    discount,\n    screen,\n    capacity,\n    ram,\n    type,\n  } = product;\n\n  const priceWithDiscount = useMemo(\n    () => price - (price * discount) / 100, [price, discount],\n  );\n  const [searchParams] = useSearchParams();\n  const location = useLocation();\n  const link = location.pathname === '/favourites'\n    ? `/favourites/${id}`\n    : `/${type}s/${id}`;\n\n  return (\n    <Link\n      to={{\n        pathname: link,\n      }}\n      state={{ search: searchParams.toString() }}\n      data-cy=\"cardsContainer\"\n      className=\"product-card\"\n    >\n      <img\n        className=\"product-card__img\"\n        src={`img/products/${id}.0.jpg`}\n        alt={id}\n      />\n      <div className=\"product-card__container\">\n        <p className=\"text product-card__title\">{name}</p>\n\n        <div\n          className=\"product-card__price-container\"\n        >\n          <h2 className=\"text text--h2\">\n            {`$${priceWithDiscount}`}\n          </h2>\n          {discount > 0 && (\n            <h2\n              className=\"text text--h2-strikethrough\"\n            >\n              {`$${price}`}\n            </h2>\n          )}\n        </div>\n\n        <div className=\"product-card__info-container\">\n          <div className=\"container\">\n            <p className=\"text text--small text--gray\">\n              Screen\n            </p>\n            <p className=\"text text--small\">{screen}</p>\n          </div>\n\n          <div className=\"container\">\n            <p className=\"text text--small text--gray\">\n              Capacity\n            </p>\n            <p className=\"text text--small\">{capacity}</p>\n          </div>\n\n          <div className=\"container\">\n            <p className=\"text text--small text--gray\">\n              RAM\n            </p>\n            <p className=\"text text--small\">{ram}</p>\n          </div>\n        </div>\n\n        <Button\n          name=\"cart\"\n          product={product}\n        />\n      </div>\n    </Link>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Product } from '../../type/Product';\nimport { ProductCard } from '../ProductCard';\n\nimport './Carousel.scss';\n\ntype Props = {\n  products: Product[],\n  currentSlide: number,\n  id: string,\n};\n\nexport const Carousel: React.FC<Props> = ({\n  products,\n  currentSlide,\n  id,\n}) => {\n  const firstItem = document.querySelector('.carousel__item');\n  const itemWidth = firstItem?.clientWidth || 0;\n\n  useEffect(() => {\n    const productsToMove = document.querySelectorAll(\n      `.carousel__item--${id}`,\n    );\n\n    productsToMove.forEach((product) => {\n      const element = product as HTMLElement;\n\n      element.style.transform = `translateX(-${currentSlide * itemWidth}px)`;\n    });\n  }, [currentSlide]);\n\n  return (\n    <ul className=\"carousel\">\n      {products.map((product) => {\n        return (\n          <li\n            key={product.id}\n            className={`\n            carousel__item\n            carousel__item--${id}`}\n          >\n            <ProductCard\n              product={product}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import classNames from 'classnames';\n\nimport { useMemo } from 'react';\n\nimport './ProductSlider.scss';\n\nconst buttons = ['prev', 'next'];\n\ntype Props = {\n  currentSlide: number,\n  setCurrentSlide: (currentSlide: number) => void,\n  length: number,\n};\n\nexport const ProductSlider: React.FC<Props> = ({\n  currentSlide,\n  setCurrentSlide,\n  length,\n}) => {\n  const handleButtonClick = (action: string) => {\n    let newSlide = currentSlide;\n\n    if (action === 'prev' && currentSlide > 0) {\n      newSlide = currentSlide - 1;\n    } else if (action === 'next' && currentSlide < length) {\n      newSlide = currentSlide + 1;\n    }\n\n    setCurrentSlide(newSlide);\n  };\n\n  const isPrevDisabled = useMemo(\n    () => currentSlide === 0, [currentSlide],\n  );\n  const isNextDisabled = useMemo(\n    () => currentSlide === length, [currentSlide, length],\n  );\n\n  return (\n    <div className=\"product-slider container\">\n      {buttons.map(action => (\n        <button\n          key={action}\n          type=\"button\"\n          title={`move ${action === 'prev' ? 'back' : 'forward'}`}\n          className={classNames('product-slider__button', {\n            'product-slider__button--disabled': action === 'prev'\n              ? isPrevDisabled\n              : isNextDisabled,\n          })}\n          onClick={() => handleButtonClick(action)}\n        >\n          <span\n            className={`\n              icon\n              icon--arrow\n              icon--${action}\n              ${action === 'prev' && isPrevDisabled\n          ? 'icon--arrow-dis'\n          : ''}\n              ${action === 'next' && isNextDisabled\n          ? 'icon--arrow-dis'\n          : ''}\n            `}\n          />\n        </button>\n      ))}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { Carousel } from '../Carousel';\nimport { useProducts } from '../ProductContext';\nimport { ProductSlider } from '../ProductSlider';\n\nexport const BrandNew = () => {\n  const { newBrandProducts, getArrayLength } = useProducts();\n  const [currentBrandNewSlide, setCurrentBrandNewSlide] = useState(0);\n  const length = getArrayLength(newBrandProducts);\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1 className=\"text text--h1\">Brand new models</h1>\n\n        <ProductSlider\n          currentSlide={currentBrandNewSlide}\n          setCurrentSlide={setCurrentBrandNewSlide}\n          length={length}\n        />\n      </div>\n\n      <Carousel\n        products={newBrandProducts}\n        currentSlide={currentBrandNewSlide}\n        id=\"brand-new\"\n      />\n    </>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport { useProducts } from '../ProductContext';\n\nimport './Category.scss';\n\nexport const Category = () => {\n  const { links, products } = useProducts();\n\n  const filterProductsByType = (productType: string) => {\n    return products.filter(product => product.type === productType);\n  };\n\n  const renderContext = (link: string) => {\n    let title = '';\n    let productType = '';\n\n    if (link === 'tablets') {\n      title = 'Tablets';\n      productType = 'tablet';\n    }\n\n    if (link === 'accessories') {\n      title = 'Accessories';\n      productType = 'accessory';\n    }\n\n    if (link === 'phones') {\n      title = 'Mobile phones';\n      productType = 'phone';\n    }\n\n    const filteredProducts = filterProductsByType(productType);\n\n    return (\n      <>\n        <h3 className=\"text text--h3\">{title}</h3>\n        <p className=\"text text--gray\">\n          {`${filteredProducts.length} models`}\n        </p>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <h1 className=\"text text--h1\">\n        Shop by category\n      </h1>\n\n      <ul className=\"category__container\">\n        {links.slice(0, 3).map(link => (\n          <li\n            key={link}\n            data-cy=\"categoryLinksContainer\"\n            className=\"category__link-container\"\n          >\n            <Link\n              to={`/${link}`}\n              className={`category__link category__link--${link}`}\n            >\n              <img\n                src={`img/category/category-${link}.png`}\n                alt=\"category\"\n              />\n            </Link>\n\n            <div className=\"category__title-container\">\n              {renderContext(link)}\n            </div>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { Carousel } from '../Carousel';\nimport { useProducts } from '../ProductContext';\nimport { ProductSlider } from '../ProductSlider';\n\nexport const HotPrices = () => {\n  const { hotPriceProducts, getArrayLength } = useProducts();\n  const [currentHotPriceSlide, setCurrentHotPriceSlide] = useState(0);\n  const length = getArrayLength(hotPriceProducts);\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1 className=\"text text--h1\">Hot prices</h1>\n\n        <ProductSlider\n          currentSlide={currentHotPriceSlide}\n          setCurrentSlide={setCurrentHotPriceSlide}\n          length={length}\n        />\n      </div>\n\n      <Carousel\n        products={hotPriceProducts}\n        currentSlide={currentHotPriceSlide}\n        id=\"hot-price\"\n      />\n    </>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Banner } from '../../comonents/Banner';\nimport { BrandNew } from '../../comonents/BrandNew';\nimport { Category } from '../../comonents/Category';\nimport { HotPrices } from '../../comonents/HotPrices';\nimport { Loader } from '../../comonents/Loader';\nimport { useProducts } from '../../comonents/ProductContext';\n\nimport './HomePage.scss';\n\nexport const HomePage = () => {\n  const { isLoading, isError } = useProducts();\n\n  return (\n    <div className=\"home-page\">\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {isError ? (\n            <h1>{isError}</h1>\n          ) : (\n            <>\n              <section className=\"home-page__banner banner\">\n                <Banner />\n              </section>\n\n              <section className=\"home-page__hot-price\">\n                <HotPrices />\n              </section>\n\n              <section className=\"home-page__category category\">\n                <Category />\n              </section>\n\n              <section className=\"home-page__brand-new\">\n                <BrandNew />\n              </section>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n","import classNames from 'classnames';\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../../helpers/utils/getSearchWith';\nimport { DropdownIterface } from '../../type/Dropdown';\nimport { useProducts } from '../ProductContext';\n\nimport './Dropdown.scss';\n\ntype Props = {\n  dropdown: DropdownIterface,\n  currentValue: string,\n  queryKey: string,\n  name: string,\n};\n\nexport const Dropdown: React.FC<Props> = ({\n  dropdown,\n  currentValue,\n  queryKey,\n  name: title,\n}) => {\n  const {\n    name,\n    options,\n    isOpen,\n  } = dropdown;\n  const { setCurrentOption } = useProducts();\n  const [isOpenState, setIsOpenState] = useState(isOpen);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const [searchParams] = useSearchParams();\n  const selectedOption = setCurrentOption(options, currentValue);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current\n        && !dropdownRef.current.contains(event.target as Node)) {\n        setIsOpenState(false);\n      }\n    };\n\n    if (isOpenState) {\n      document.addEventListener('click', handleClickOutside);\n    } else {\n      document.removeEventListener('click', handleClickOutside);\n    }\n  }, [isOpenState]);\n\n  const handleDropdownToggle = () => {\n    setIsOpenState(!isOpenState);\n  };\n\n  const handleClick = () => {\n    setIsOpenState(false);\n  };\n\n  return (\n    <div\n      ref={dropdownRef}\n      className={classNames(\n        'dropdown',\n        { 'dropdown--active': isOpenState },\n      )}\n    >\n      <p className=\"text text--small text--gray\">\n        {title}\n      </p>\n\n      <button\n        type=\"button\"\n        className={`\n          dropdown__trigger\n          dropdown__trigger--${name}`}\n        onClick={handleDropdownToggle}\n      >\n        {selectedOption}\n\n        <span className={classNames(\n          'icon',\n          'icon--arrow-dis',\n          { 'icon--down': !isOpenState },\n        )}\n        />\n      </button>\n\n      <div className=\"dropdown__content\">\n        <ul className=\"dropdown__list\">\n          {Object.entries(options).map(option => {\n            const [key, value] = option;\n\n            return (\n              <li key={value} className=\"dropdown__item\">\n                <Link\n                  to={{\n                    search: getSearchWith(searchParams, { [queryKey]: value }),\n                  }}\n                  className={classNames(\n                    'dropdown__link',\n                    { 'dropdown__link--selected': value === currentValue },\n                  )}\n                  onClick={handleClick}\n                >\n                  {key}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\n\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { useMemo } from 'react';\nimport { getSearchWith } from '../../helpers/utils/getSearchWith';\n\nimport './Pagination.scss';\n\ntype Props = {\n  currentPage: number,\n  pageCount: number[],\n  totalLength: number,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  currentPage,\n  pageCount,\n  totalLength,\n}) => {\n  const [searchParams] = useSearchParams();\n\n  const [\n    isPrevDisabled,\n    isNextDisabled,\n    isPrev,\n    isNext,\n  ] = useMemo(() => {\n    const isPrevDisabledValue = currentPage === 1;\n    const isNextDisabledValue = currentPage === pageCount.length;\n    const isNextValue = currentPage < totalLength\n      ? currentPage + 1 : currentPage;\n    const isPrevValue = currentPage > 1 ? currentPage - 1 : currentPage;\n\n    return [isPrevDisabledValue, isNextDisabledValue, isPrevValue, isNextValue];\n  }, [currentPage, pageCount.length, totalLength]);\n\n  // useEffect(() => {\n  //   if (isPrevDisabled) {\n  //     setSearchParams(getSearchWith(searchParams, { page: null }));\n  //   }\n  // }, [isPrevDisabled]);\n\n  return (\n    <ul className=\"pagination\" data-cy=\"pagination\">\n      <li className={classNames(\n        'pagination__item',\n        { 'pagination__item--disabled': isPrevDisabled },\n      )}\n      >\n        <Link\n          to={{\n            search: getSearchWith(\n              searchParams, { page: isPrev.toString() },\n            ),\n          }}\n          className=\"pagination__link\"\n          data-cy=\"paginationLeft\"\n        >\n          <span className={classNames(\n            'icon',\n            'icon--prev',\n            {\n              'icon--arrow': !isPrevDisabled,\n              'icon--arrow-dis': isPrevDisabled,\n            },\n          )}\n          />\n        </Link>\n      </li>\n\n      {pageCount.map(page => (\n        <li\n          key={page}\n          className=\"pagination__item\"\n        >\n          <Link\n            to={{\n              search: getSearchWith(\n                searchParams, { page: page.toString() },\n              ),\n            }}\n            className={classNames(\n              'pagination__link',\n              { 'pagination__link--active': page === currentPage },\n            )}\n          >\n            {page}\n          </Link>\n        </li>\n      ))}\n\n      <li className={classNames(\n        'pagination__item',\n        { 'pagination__item--disabled': isNextDisabled },\n      )}\n      >\n        <Link\n          to={{\n            search: getSearchWith(searchParams, { page: isNext.toString() }),\n          }}\n          className=\"pagination__link\"\n          data-cy=\"paginationRight\"\n        >\n          <span className={classNames(\n            'icon',\n            'icon--next',\n            {\n              'icon--arrow': !isNextDisabled,\n              'icon--arrow-dis': isNextDisabled,\n            },\n          )}\n          />\n        </Link>\n      </li>\n    </ul>\n  );\n};\n","import { Product } from '../../type/Product';\nimport { ProductCard } from '../ProductCard';\n\nimport './ProductList.scss';\n\ntype Props = {\n  productsForCurrentPage: Product[],\n};\n\nexport const ProductList: React.FC<Props> = ({ productsForCurrentPage }) => {\n  return (\n    <ul className=\"product-list\" data-cy=\"productList\">\n      {productsForCurrentPage.map(product => (\n        <li key={product.id}>\n          <ProductCard product={product} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","type Props = {\n  category: string,\n};\n\nexport const NoResults: React.FC<Props> = ({ category }) => (\n  <h3>{`${category} not found`}</h3>\n);\n","import { Product } from '../../type/Product';\n\nexport function SortProducts(products: Product[], sort: string, query: string) {\n  let sortedProducts: Product[] = [];\n\n  switch (sort) {\n    case 'age':\n      sortedProducts = [...products].sort(\n        (productA, productB) => productA.age - productB.age,\n      );\n      break;\n\n    case 'name':\n      sortedProducts = [...products].sort(\n        (productA, productB) => productA.name.localeCompare(productB.name),\n      );\n      break;\n\n    case 'price':\n      sortedProducts = [...products].sort(\n        (productA, productB) => {\n          const absoluteDiscountA = productA.price - (\n            productA.price * productA.discount) / 100;\n          const absoluteDiscountB = productB.price - (\n            productB.price * productB.discount) / 100;\n\n          return absoluteDiscountA - absoluteDiscountB;\n        },\n      );\n      break;\n\n    default:\n      sortedProducts = products;\n  }\n\n  if (query) {\n    const queryArray = query.split(' ');\n\n    queryArray.forEach(queryValue => {\n      sortedProducts = sortedProducts.filter(\n        product => product.name.toLowerCase(\n        ).includes(queryValue.toLowerCase()),\n      );\n    });\n  }\n\n  return sortedProducts;\n}\n","export const NoSearchResults = () => {\n  return (\n    <h3>\n      No search results\n    </h3>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport './BreadCrumbs.scss';\n\ntype Props = {\n  linkName: string,\n};\n\nexport const BreadCrumbs: React.FC<Props> = ({ linkName }) => {\n  return (\n    <div className=\"bread-crumbs\">\n      <Link to=\"/\">\n        <span className=\"icon icon--home\" />\n      </Link>\n\n      <span className=\"icon icon--arrow-dis icon--next\" />\n\n      <p\n        className=\"text text--small text--gray\"\n      >\n        {linkName}\n      </p>\n    </div>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { Loader } from '../../comonents/Loader';\nimport { Dropdown } from '../../comonents/Dropdown';\nimport { Pagination } from '../../comonents/Pagination';\nimport { ProductList } from '../../comonents/ProductList';\nimport { useProducts } from '../../comonents/ProductContext';\nimport { NoResults } from '../../comonents/NoResults';\nimport { SortProducts } from '../../helpers/utils/sortProducts';\nimport { NoSearchResults } from '../../comonents/NoSearchResults';\nimport { BreadCrumbs } from '../../comonents/BreadCrumbs';\n\nimport '../../style/block/page.scss';\nimport { getSearchWith } from '../../helpers/utils/getSearchWith';\n\nexport const PhonesPage = () => {\n  const {\n    sortDropdown,\n    perPageDropdown,\n    page,\n    sort,\n    query,\n    perPage,\n    setPerPage,\n    setPageCount,\n    setStartIndex,\n    isLoading,\n    phones,\n    isError,\n    prevSearch,\n    setPrevSearch,\n  } = useProducts();\n  const sortedPhones = SortProducts(phones, sort, query);\n  const totalLength = sortedPhones.length;\n  const perPageToNum = setPerPage(totalLength);\n  const pageCount = setPageCount(totalLength, perPageToNum);\n  const startIndex = setStartIndex(perPageToNum);\n  const productsForCurrentPage = sortedPhones.slice(\n    startIndex, startIndex + perPageToNum,\n  );\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const renderContext = () => {\n    if (!isLoading && phones.length === 0) {\n      return <NoResults category=\"Phones\" />;\n    }\n\n    if (!isLoading && isError) {\n      return <h1>{isError}</h1>;\n    }\n\n    if (query && sortedPhones.length === 0) {\n      return <NoSearchResults />;\n    }\n\n    return (\n      <ProductList productsForCurrentPage={productsForCurrentPage} />\n    );\n  };\n\n  useEffect(() => {\n    if (page === 1) {\n      setSearchParams(getSearchWith(searchParams, { page: null }));\n    }\n  }, [page, searchParams]);\n\n  useEffect(() => {\n    if (query) {\n      setSearchParams(getSearchWith(searchParams, { page: null }));\n    }\n\n    if (!query && sort === prevSearch.sort && perPage === prevSearch.perPage) {\n      setSearchParams(getSearchWith(\n        searchParams, { page: prevSearch.page.toString() },\n      ));\n    }\n  }, [query, sort, perPage]);\n\n  useEffect(() => {\n    if (!query) {\n      setPrevSearch({ page, sort, perPage });\n    }\n  }, [query, sort, perPage, page]);\n\n  return (\n    <section className=\"page\">\n      <BreadCrumbs linkName=\"Phones\" />\n\n      <h1 className=\"text text--h1 page__title\">Mobile phones</h1>\n\n      <p className=\"text text--gray\">{`${phones.length} models`}</p>\n\n      <div className=\"page__dropdown-container\">\n        <Dropdown\n          key={sortDropdown.name}\n          dropdown={sortDropdown}\n          currentValue={sort}\n          queryKey={sortDropdown.name}\n          name=\"Sort by\"\n        />\n        <Dropdown\n          key={perPageDropdown.name}\n          dropdown={perPageDropdown}\n          currentValue={perPage.toString()}\n          queryKey={perPageDropdown.name}\n          name=\"Items on page\"\n        />\n      </div>\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"page__main-container\">\n          {renderContext()}\n\n          {pageCount.length > 1 && (\n            <Pagination\n              currentPage={page}\n              pageCount={pageCount}\n              totalLength={totalLength}\n            />\n          )}\n        </div>\n      )}\n    </section>\n  );\n};\n","import { Loader } from '../../comonents/Loader';\nimport { Dropdown } from '../../comonents/Dropdown';\nimport { Pagination } from '../../comonents/Pagination';\nimport { ProductList } from '../../comonents/ProductList';\nimport { useProducts } from '../../comonents/ProductContext';\nimport { NoResults } from '../../comonents/NoResults';\nimport { SortProducts } from '../../helpers/utils/sortProducts';\nimport { NoSearchResults } from '../../comonents/NoSearchResults';\nimport { BreadCrumbs } from '../../comonents/BreadCrumbs';\n\nimport '../../style/block/page.scss';\n\nexport const TabletsPage = () => {\n  const {\n    sortDropdown,\n    perPageDropdown,\n    page,\n    sort,\n    query,\n    perPage,\n    setPerPage,\n    setPageCount,\n    setStartIndex,\n    isLoading,\n    tablets,\n    isError,\n  } = useProducts();\n  const sortedTablets = SortProducts(tablets, sort, query);\n  const totalLength = sortedTablets.length;\n  const perPageToNum = setPerPage(totalLength);\n  const pageCount = setPageCount(totalLength, perPageToNum);\n  const startIndex = setStartIndex(perPageToNum);\n  const productsForCurrentPage = sortedTablets.slice(\n    startIndex, startIndex + perPageToNum,\n  );\n\n  const renderContext = () => {\n    if (!isLoading && tablets.length === 0) {\n      return <NoResults category=\"Tablets\" />;\n    }\n\n    if (!isLoading && isError) {\n      return <h1>{isError}</h1>;\n    }\n\n    if (query && sortedTablets.length === 0) {\n      return <NoSearchResults />;\n    }\n\n    return (\n      <ProductList productsForCurrentPage={productsForCurrentPage} />\n    );\n  };\n\n  return (\n    <section className=\"page\">\n      <BreadCrumbs linkName=\"Tablets\" />\n\n      <h1 className=\"text text--h1 page__title\">Tablets</h1>\n\n      <p className=\"text text--gray\">{`${tablets.length} models`}</p>\n\n      <div className=\"page__dropdown-container\">\n        <Dropdown\n          key={sortDropdown.name}\n          dropdown={sortDropdown}\n          currentValue={sort}\n          queryKey={sortDropdown.name}\n          name=\"Sort by\"\n        />\n        <Dropdown\n          key={perPageDropdown.name}\n          dropdown={perPageDropdown}\n          currentValue={perPage.toString()}\n          queryKey={perPageDropdown.name}\n          name=\"Items on page\"\n        />\n      </div>\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"page__main-container\">\n          {renderContext()}\n\n          {pageCount.length > 1 && (\n            <Pagination\n              currentPage={page}\n              pageCount={pageCount}\n              totalLength={totalLength}\n            />\n          )}\n        </div>\n      )}\n    </section>\n  );\n};\n","import { Loader } from '../../comonents/Loader';\nimport { Dropdown } from '../../comonents/Dropdown';\nimport { Pagination } from '../../comonents/Pagination';\nimport { ProductList } from '../../comonents/ProductList';\nimport { useProducts } from '../../comonents/ProductContext';\nimport { NoResults } from '../../comonents/NoResults';\nimport { SortProducts } from '../../helpers/utils/sortProducts';\nimport { NoSearchResults } from '../../comonents/NoSearchResults';\nimport { BreadCrumbs } from '../../comonents/BreadCrumbs';\n\nimport '../../style/block/page.scss';\n\nexport const AccessoriesPage = () => {\n  const {\n    sortDropdown,\n    perPageDropdown,\n    page,\n    sort,\n    query,\n    perPage,\n    setPerPage,\n    setPageCount,\n    setStartIndex,\n    isLoading,\n    accessories,\n    isError,\n  } = useProducts();\n  const sortedAccessories = SortProducts(accessories, sort, query);\n  const totalLength = sortedAccessories.length;\n  const perPageToNum = setPerPage(totalLength);\n  const pageCount = setPageCount(totalLength, perPageToNum);\n  const startIndex = setStartIndex(perPageToNum);\n  const productsForCurrentPage = sortedAccessories.slice(\n    startIndex, startIndex + perPageToNum,\n  );\n\n  const renderContext = () => {\n    if (!isLoading && accessories.length === 0) {\n      return <NoResults category=\"Accessories\" />;\n    }\n\n    if (!isLoading && isError) {\n      return <h1>{isError}</h1>;\n    }\n\n    if (query && sortedAccessories.length === 0) {\n      return <NoSearchResults />;\n    }\n\n    return (\n      <ProductList productsForCurrentPage={productsForCurrentPage} />\n    );\n  };\n\n  return (\n    <section className=\"page\">\n      <BreadCrumbs linkName=\"Accessories\" />\n\n      <h1 className=\"text text--h1 page__title\">Accessories</h1>\n\n      <p className=\"text text--gray\">{`${accessories.length} models`}</p>\n\n      <div className=\"page__dropdown-container\">\n        <Dropdown\n          key={sortDropdown.name}\n          dropdown={sortDropdown}\n          currentValue={sort}\n          queryKey={sortDropdown.name}\n          name=\"Sort by\"\n        />\n        <Dropdown\n          key={perPageDropdown.name}\n          dropdown={perPageDropdown}\n          currentValue={perPage.toString()}\n          queryKey={perPageDropdown.name}\n          name=\"Items on page\"\n        />\n      </div>\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"page__main-container\">\n          {renderContext()}\n\n          {pageCount.length > 1 && (\n            <Pagination\n              currentPage={page}\n              pageCount={pageCount}\n              totalLength={totalLength}\n            />\n          )}\n        </div>\n      )}\n    </section>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { useProducts } from '../../comonents/ProductContext';\nimport { ProductList } from '../../comonents/ProductList';\nimport { SortProducts } from '../../helpers/utils/sortProducts';\nimport { NoSearchResults } from '../../comonents/NoSearchResults';\nimport { BreadCrumbs } from '../../comonents/BreadCrumbs';\n\nimport '../../style/block/page.scss';\n\nexport const FavouritesPage = () => {\n  const { favourites, query } = useProducts();\n  const sortedFavourites = SortProducts(favourites, '', query);\n  const { length } = favourites;\n\n  const renderContext = () => {\n    if (length === 0) {\n      return 'You dont have any favourites';\n    }\n\n    if (query && sortedFavourites.length === 0) {\n      return <NoSearchResults />;\n    }\n\n    return <ProductList productsForCurrentPage={sortedFavourites} />;\n  };\n\n  return (\n    <section className=\"page\">\n      <BreadCrumbs linkName=\"Favourites\" />\n\n      <h1 className=\"text text--h1 page__title\">\n        Favourites\n      </h1>\n\n      {length > 0 && (\n        <p className=\"text text--gray\">\n          {length === 1 ? (\n            '1 item'\n          ) : (\n            `${length} items`\n          )}\n        </p>\n      )}\n\n      <div className=\"page__fav-container\">\n        {renderContext()}\n      </div>\n    </section>\n  );\n};\n","import { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { Carts } from '../../type/Carts';\n\nimport './Cart.scss';\n\ntype Props = {\n  cart: Carts,\n  handleCartAction: (\n    id: string, action: 'add' | 'delete' | 'deleteAll') => void,\n};\n\nexport const Cart: React.FC<Props> = ({\n  cart,\n  handleCartAction,\n}) => {\n  const {\n    id,\n    name,\n    price,\n    discount,\n    count,\n  } = cart;\n\n  const productPrice = useMemo(\n    () => price - (price * discount) / 100, [price, discount],\n  );\n\n  const totalPrice = productPrice * count;\n\n  return (\n    <section className=\"cart\" key={id}>\n      <div className=\"cart__cross-container\">\n        <button\n          type=\"button\"\n          title=\"delite item\"\n          className=\"cart__button cart__button--cross\"\n          data-cy=\"cartDeleteButton\"\n          onClick={() => handleCartAction(id, 'deleteAll')}\n        >\n          <span className=\"icon icon--cross\" />\n        </button>\n      </div>\n      <div className=\"cart__img-container\">\n        <img\n          src={`img/products/${id}.0.jpg`}\n          alt=\"product\"\n          className=\"cart__img\"\n        />\n      </div>\n      <div className=\"cart__name-container\">\n        <p className=\"text\">{name}</p>\n      </div>\n      <div className=\"cart__button-container\">\n        <button\n          type=\"button\"\n          title=\"minus\"\n          className={classNames(\n            'cart__button',\n            { 'cart__button--minus': count === 1 },\n          )}\n          onClick={() => handleCartAction(id, 'delete')}\n        >\n          <span className={classNames(\n            'icon',\n            { 'icon--minus': count > 1 },\n            { 'icon--minus-gray': count === 1 },\n          )}\n          />\n        </button>\n        <div className=\"cart__count\">\n          <p className=\"text\">{count}</p>\n        </div>\n        <button\n          type=\"button\"\n          title=\"plus\"\n          className=\"cart__button cart__button--plus\"\n          onClick={() => handleCartAction(id, 'add')}\n        >\n          <span className=\"icon icon--plus\" />\n        </button>\n      </div>\n      <p className=\"text text--h2 cart__price\">{`$${totalPrice}`}</p>\n    </section>\n  );\n};\n","import { useNavigate } from 'react-router-dom';\n\nimport './BackButton.scss';\n\nexport const BackButton = () => {\n  const navigate = useNavigate();\n\n  function goBack() {\n    navigate(-1);\n  }\n\n  return (\n    <div className=\"back\">\n      <span className=\"icon icon--arrow icon--prev\" />\n\n      <button\n        type=\"submit\"\n        onClick={goBack}\n        className=\"text text--small text--gray back__button\"\n        data-cy=\"backButton\"\n      >\n        Back\n      </button>\n    </div>\n  );\n};\n","import classNames from 'classnames';\n\nimport { useProducts } from '../../comonents/ProductContext';\nimport { Cart } from '../../comonents/Cart';\nimport { getFilteredCarts } from '../../helpers/utils/getFilteredCart';\nimport { Product } from '../../type/Product';\nimport { getTotalPrice } from '../../helpers/utils/getTotalPrice';\nimport { BackButton } from '../../comonents/BackButton';\n\nimport './CartPage.scss';\n\nexport const CartPage = () => {\n  const { setCarts, isMessage, setIsMessage } = useProducts();\n  const { carts } = useProducts();\n  const filteredCarts = getFilteredCarts(carts);\n  const totalPrice = getTotalPrice(carts);\n  // const [isMessage, setIsMessage] = useState(false);\n\n  const handleCartAction = (\n    id: string, action: 'add' | 'delete' | 'deleteAll',\n  ) => {\n    let updatedCarts: Product[] = [...carts];\n    let cartToAdd: Product | undefined;\n    let itemIndex: number | undefined;\n\n    switch (action) {\n      case 'add':\n        cartToAdd = carts.find(cart => cart.id === id);\n        if (cartToAdd) {\n          updatedCarts.push(cartToAdd);\n        }\n\n        break;\n\n      case 'delete':\n        itemIndex = updatedCarts.findIndex(cartItem => cartItem.id === id);\n        if (itemIndex !== -1) {\n          updatedCarts.splice(itemIndex, 1);\n        }\n\n        break;\n\n      case 'deleteAll':\n        updatedCarts = updatedCarts.filter(cart => cart.id !== id);\n        break;\n\n      default:\n        break;\n    }\n\n    setCarts(updatedCarts);\n  };\n\n  const handleButtonClick = () => {\n    setIsMessage(true);\n\n    setTimeout(() => {\n      setIsMessage(false);\n    }, 1000);\n  };\n\n  return (\n    <section className=\"carts\">\n      <BackButton />\n\n      <h1 className=\"carts__title\">\n        {carts.length === 0 ? (\n          'Your cart is empty'\n        ) : (\n          'Cart'\n        )}\n      </h1>\n\n      {carts.length > 0 && (\n        <div className=\"carts__main-container\">\n          <div className=\"carts__container\">\n            {filteredCarts.map(cart => (\n              <Cart\n                cart={cart}\n                handleCartAction={handleCartAction}\n                key={cart.id}\n              />\n            ))}\n          </div>\n\n          <div data-cy=\"productQauntity\" className=\"carts__qauntity\">\n            <div className=\"carts__total-price-container\">\n              <h2 className=\"text text--h1\">\n                {`$${totalPrice}`}\n              </h2>\n              <p className=\"text text--gray\">\n                {carts.length > 1 ? (\n                  `Total for ${carts.length} items`\n                ) : (\n                  'Price for 1 item'\n                )}\n              </p>\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"carts__button\"\n              onClick={handleButtonClick}\n            >\n              Checkout\n            </button>\n          </div>\n        </div>\n      )}\n\n      {isMessage && (\n        <div className={classNames(\n          'carts__notification',\n          { 'carts__notification--active': isMessage },\n        )}\n        >\n          We are sorry, but this feature is not implemented yet\n        </div>\n      )}\n    </section>\n  );\n};\n","import { Carts } from '../../type/Carts';\nimport { Product } from '../../type/Product';\n\nexport function getFilteredCarts(carts: Product[]): Carts[] {\n  const filteredCarts: { [id: string]: Carts } = {};\n\n  carts.forEach((cart) => {\n    const {\n      id,\n      price,\n      discount,\n      name,\n    } = cart;\n\n    if (filteredCarts[id]) {\n      filteredCarts[id].count += 1;\n    } else {\n      filteredCarts[id] = {\n        id,\n        count: 1,\n        price,\n        discount,\n        name,\n      };\n    }\n  });\n\n  const sortedCarts = Object.keys(filteredCarts)\n    .sort()\n    .map(id => filteredCarts[id]);\n\n  return sortedCarts;\n}\n","import { Product } from '../../type/Product';\n\nexport function getTotalPrice(carts: Product[]) {\n  const priceMap = carts.map(\n    cart => cart.price - (cart.price * cart.discount) / 100,\n  );\n\n  const totalPrice = priceMap.reduce((acc, value) => {\n    return acc + value;\n  }, 0);\n\n  return totalPrice;\n}\n","import './About.scss';\n\ntype Props = {\n  description: string,\n  screen: string,\n  screenResolution: string,\n  os: string,\n  ram: string,\n  type: string,\n  primary: string,\n  capacity: string,\n};\n\nexport const About: React.FC<Props> = ({\n  description,\n  screen,\n  screenResolution,\n  os,\n  ram,\n  type,\n  primary,\n  capacity,\n}) => {\n  return (\n    <div className=\"about\">\n      <div className=\"about__description\">\n        <h2 className=\"about__title\">\n          About\n        </h2>\n\n        <div\n          className=\"about__text text\"\n          data-cy=\"productDescription\"\n        >\n          {description}\n        </div>\n      </div>\n\n      <div className=\"about__tech\">\n        <h2 className=\"about__title\">\n          Tech space\n        </h2>\n        <ul className=\"about__tech about__tech--container\">\n          <li className=\"about__info\">\n            <p className=\"text text--gray\">Screen</p>\n            <p className=\"text\">{screen}</p>\n          </li>\n          <li className=\"about__info\">\n            <p className=\"text text--gray\">\n              Resolution\n            </p>\n            <p className=\"text\">{screenResolution}</p>\n          </li>\n          <li className=\"about__info\">\n            <p className=\"text text--gray\">OS</p>\n            <p className=\"text\">{os}</p>\n          </li>\n          <li className=\"about__info\">\n            <p className=\"text text--gray\">Ram</p>\n            <p className=\"text\">{ram}</p>\n          </li>\n          <li className=\"about__info\">\n            <p className=\"text text--gray\">\n              Battery\n            </p>\n            <p className=\"text\">\n              {type}\n            </p>\n          </li>\n          <li className=\"about__info\">\n            <p className=\"text text--gray\">Camera</p>\n            <p className=\"text\">{primary}</p>\n          </li>\n          <li className=\"about__info\">\n            <p className=\"text text--gray\">Capacity</p>\n            <p className=\"text\">{capacity}</p>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import { ChangeEvent, useState } from 'react';\nimport './Option.scss';\nimport classNames from 'classnames';\n\nexport const Option = () => {\n  const [isCapacity, setIsCapacity] = useState('64');\n  const [isColor, setIsColor] = useState('red');\n\n  const handleCapacityChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setIsCapacity(e.target.value);\n  };\n\n  const handleColorCahange = (e: ChangeEvent<HTMLInputElement>) => {\n    setIsColor(e.target.value);\n  };\n\n  return (\n    <div className=\"options\">\n      <div className=\"options__container\">\n        <p className=\"text text--small text--gray\">\n          Available colors\n        </p>\n        <div className=\"options__select-container\">\n          <label className={classNames(\n            'options__color-label',\n            { 'options__color-label--selected': isColor === 'red' },\n          )}\n          >\n            <input\n              type=\"radio\"\n              name=\"color\"\n              value=\"red\"\n              title=\"red\"\n              className=\"options__input\"\n              onChange={handleColorCahange}\n            />\n            <span className=\"options__color options__color--red\" />\n          </label>\n\n          <label\n            className={classNames(\n              'options__color-label',\n              { 'options__color-label--selected': isColor === 'green' },\n            )}\n          >\n            <input\n              type=\"radio\"\n              name=\"color\"\n              value=\"green\"\n              title=\"green\"\n              className=\"options__input\"\n              onChange={handleColorCahange}\n            />\n            <span className=\"options__color options__color--green\" />\n          </label>\n\n          <label\n            className={classNames(\n              'options__color-label',\n              { 'options__color-label--selected': isColor === 'sec' },\n            )}\n          >\n            <input\n              type=\"radio\"\n              name=\"color\"\n              value=\"sec\"\n              title=\"sec\"\n              className=\"options__input\"\n              onChange={handleColorCahange}\n            />\n            <span className=\"options__color options__color--sec\" />\n          </label>\n        </div>\n      </div>\n\n      <div className=\"options__container options__container--capacity\">\n        <p className=\"text text--small text--gray\">\n          Select capacity\n        </p>\n        <div className=\"options__select-container\">\n          <label\n            className={classNames(\n              'options__capacity',\n              'text',\n              { 'options__capacity--selected': isCapacity === '64' },\n            )}\n          >\n            <input\n              className=\"options__input\"\n              type=\"radio\"\n              name=\"capacity\"\n              value=\"64\"\n              onChange={handleCapacityChange}\n            />\n            64 gb\n          </label>\n\n          <label\n            className={classNames(\n              'options__capacity',\n              'text',\n              { 'options__capacity--selected': isCapacity === '256' },\n            )}\n          >\n            <input\n              className=\"options__input\"\n              type=\"radio\"\n              name=\"capacity\"\n              value=\"256\"\n              onChange={handleCapacityChange}\n            />\n            256 gb\n          </label>\n\n          <label\n            className={classNames(\n              'options__capacity',\n              'text',\n              { 'options__capacity--selected': isCapacity === '512' },\n            )}\n          >\n            <input\n              className=\"options__input\"\n              type=\"radio\"\n              name=\"capacity\"\n              value=\"512\"\n              onChange={handleCapacityChange}\n            />\n            512 gb\n          </label>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\n\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport { useProducts } from '../../comonents/ProductContext';\nimport { Loader } from '../../comonents/Loader';\nimport { ProductSlider } from '../../comonents/ProductSlider';\nimport { Carousel } from '../../comonents/Carousel';\nimport { About } from '../../comonents/About';\nimport { Button } from '../../comonents/Button';\nimport { Option } from '../../comonents/Options';\nimport { BackButton } from '../../comonents/BackButton';\n\nimport './ProductDetailsPage.scss';\n\nexport const ProductDetailsPage = () => {\n  const {\n    productDetails,\n    selectedProduct,\n    setSelectedProductId,\n    isLoading,\n    randomProducts,\n    getArrayLength,\n    isProductNotFound,\n  } = useProducts();\n  const [imgIndex, setImgIndex] = useState(0);\n  const { productId } = useParams();\n  const { state } = useLocation();\n  const location = useLocation();\n\n  const {\n    android,\n    battery,\n    camera,\n    description,\n    display,\n    id,\n    images,\n  } = productDetails;\n\n  const { os } = android;\n  const { type } = battery;\n  const { primary } = camera;\n  const { screenResolution } = display;\n\n  const {\n    price,\n    discount,\n    screen,\n    capacity,\n    ram,\n    name,\n  } = selectedProduct;\n\n  const priceWithDiscount = price - (price * discount) / 100;\n  const getBackButtonName = location.pathname.split('/')[1];\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const length = getArrayLength(randomProducts);\n\n  useEffect(() => {\n    if (productId) {\n      setSelectedProductId(productId);\n    }\n\n    return () => {\n      setSelectedProductId('');\n    };\n  }, [productId, setSelectedProductId]);\n\n  const handleImageClick = (e: React.MouseEvent, index: number) => {\n    e.preventDefault();\n    setImgIndex(index);\n  };\n\n  const renderContext = () => {\n    if (isProductNotFound) {\n      return (\n        <div>\n          <BackButton />\n          <h2>\n            Phone was not found\n          </h2>\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <div\n          className=\"details__bread-crumbs\"\n          data-cy=\"breadCrumbs\"\n        >\n          <Link to=\"/\">\n            <span className=\"icon icon--home\" />\n          </Link>\n\n          <span className=\"icon icon--arrow-dis icon--next\" />\n\n          <Link\n            to={{\n              pathname: '..',\n              search: state?.search,\n            }}\n            className=\"text text--small\"\n          >\n            {getBackButtonName}\n          </Link>\n\n          <span className=\"icon icon--arrow-dis icon--next\" />\n\n          <p className=\"text text--small text--gray\">\n            {name.toLowerCase()}\n          </p>\n        </div>\n\n        <BackButton />\n\n        <h1 className=\"details__title text text--h1\">\n          {name.toLowerCase()}\n        </h1>\n\n        <section className=\"details__main-container\">\n          <ul className=\"details__images-container\">\n            {images.map((img, index) => (\n              <li\n                key={img}\n                className={classNames(\n                  'details__image-container',\n                  {\n                    'details__image-container--selected':\n                      imgIndex === index,\n                  },\n                )}\n              >\n                <a\n                  href=\"/\"\n                  type=\"button\"\n                  onClick={(e) => handleImageClick(e, index)}\n                >\n                  <img\n                    className=\"details__img\"\n                    src={`img/products/${id}.${index}.jpg`}\n                    alt=\"img\"\n                  />\n                </a>\n              </li>\n            ))}\n          </ul>\n\n          <div className=\"details__selected-img-container\">\n            <img\n              src={`img/products/${productDetails.id}.${imgIndex}.jpg`}\n              alt=\"img\"\n              className=\"details__img details__img--selected\"\n            />\n          </div>\n\n          <div className=\"details__inner-container\">\n            <Option />\n\n            <div className=\"details__info-container\">\n              <div className=\"details__price-container\">\n                {discount > 0 && (\n                  <p className=\"text text--h1\">{`$${priceWithDiscount}`}</p>\n                )}\n\n                <p className={classNames(\n                  'text',\n                  'text--h1',\n                  { 'text--h2-strikethrough': discount > 0 },\n                  { 'text--gray': discount > 0 },\n                )}\n                >\n                  {`$${price}`}\n                </p>\n              </div>\n\n              <Button\n                name=\"details\"\n                product={selectedProduct}\n              />\n\n              <ul className=\"details__info-container\">\n                <li className=\"details__info\">\n                  <p className=\"text text--gray text--small\">\n                    Screen\n                  </p>\n                  <p className=\"text text--small\">\n                    {screen}\n                  </p>\n                </li>\n                <li className=\"details__info\">\n                  <p className=\"text text--gray text--small\">\n                    Resolution\n                  </p>\n                  <p className=\"text text--small\">\n                    {screenResolution}\n                  </p>\n                </li>\n                <li className=\"details__info\">\n                  <p className=\"text text--gray text--small\">\n                    OS\n                  </p>\n                  <p className=\"text text--small\">\n                    {os}\n                  </p>\n                </li>\n                <li className=\"details__info\">\n                  <p className=\"text text--gray text--small\">\n                    Ram\n                  </p>\n                  <p className=\"text text--small\">\n                    {ram}\n                  </p>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </section>\n\n        <About\n          description={description}\n          screen={screen}\n          screenResolution={screenResolution}\n          os={os}\n          ram={ram}\n          type={type}\n          primary={primary}\n          capacity={capacity}\n        />\n\n        <div className=\"details__carousel-container\">\n          <div className=\"container\">\n            <h2>You may also like</h2>\n            <ProductSlider\n              currentSlide={currentSlide}\n              setCurrentSlide={setCurrentSlide}\n              length={length}\n            />\n          </div>\n\n          <Carousel\n            products={randomProducts}\n            currentSlide={currentSlide}\n            id=\"random\"\n          />\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <section className=\"details\">\n      {isLoading ? (\n        <Loader />\n      ) : (\n        renderContext()\n      )}\n    </section>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PhonesPage } from './pages/PhonesPage';\nimport { TabletsPage } from './pages/TabletsPage';\nimport { AccessoriesPage } from './pages/AccessoriesPage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { FavouritesPage } from './pages/FavouritesPage';\nimport { CartPage } from './pages/CartPage';\nimport { ProductsProvider } from './comonents/ProductContext';\nimport { ProductDetailsPage } from './pages/ProductDetailsPage';\n\nexport const Root = () => {\n  return (\n    <Router>\n      <ProductsProvider>\n        <Routes>\n          <Route path=\"/\" element={<App />}>\n            <Route index element={<HomePage />} />\n            <Route path=\"phones\">\n              <Route index element={<PhonesPage />} />\n              <Route path=\":productId\" element={<ProductDetailsPage />} />\n            </Route>\n            <Route path=\"tablets\">\n              <Route index element={<TabletsPage />} />\n              <Route path=\":productId\" element={<ProductDetailsPage />} />\n            </Route>\n            <Route path=\"accessories\">\n              <Route index element={<AccessoriesPage />} />\n              <Route path=\":productId\" element={<ProductDetailsPage />} />\n            </Route>\n            <Route path=\"favourites\">\n              <Route index element={<FavouritesPage />} />\n              <Route path=\":productId\" element={<ProductDetailsPage />} />\n            </Route>\n            <Route path=\"cart\">\n              <Route index element={<CartPage />} />\n            </Route>\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n            <Route\n              path=\"*\"\n              element={<NotFoundPage />}\n            />\n          </Route>\n        </Routes>\n      </ProductsProvider>\n    </Router>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Root } from './Root';\n\nReactDOM.render(\n  <Root />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}